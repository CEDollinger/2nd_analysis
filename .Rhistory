plot(regen.i$recruited_mean~regen.i$year)
mean(regen.i$recruited_mean)
# reference conditions for calculating differences in basal area / dominant species / regime shift, rep1-5
ref.ids <- c(0:4)*512+1 # run ids of the baseline runs
ds.ref <- data.frame()
for (id in ref.ids) {
db.conn <- dbConnect(RSQLite::SQLite(), paste0("raw_data/breakingTheSystem_", toupper(landscapename) ,"_Results/data",id,"/output.sqlite"))
ds.ref_i <- tbl(db.conn, "dynamicstand") %>%
dplyr::select(-ru) %>%
collect() %>%
rename(basal_area_m2 = basalarea_sum, count_ha = if_height_0_1_0_sum) %>%
mutate(climate = master$climate[id], rep = master$rep[id], size = master$sizeMod[id], freq = master$freqMod[id],
browsing = master$browsingMod[id], fecundity = master$fecundityMod[1],
identifier = paste0(master$climate[id], "_rep", master$rep[id], "_size", master$sizeMod[id], "_freq", master$freqMod[id],
"_browsing", master$browsingMod[id], "_fecundity", master$fecundityMod[id])) %>%
mutate(size = factor(size, levels = rev(c("10", "5", "2", "1"))),
freq = factor(freq, levels = rev(c("10", "5", "2", "1"))),
fecundity = factor(fecundity, levels = c("100", "50", "20", "10")),
browsing = factor(browsing, levels = rev(c("10", "5", "2", "1"))),
landscape = landscapename)
dbDisconnect(db.conn); rm(db.conn)
ds.ref <- bind_rows(ds.ref_i, ds.ref); rm(ds.ref_i)
}
rem <- data.frame(); ls <- data.frame(); ds.basal <- data.frame(); ds.dom <- data.frame(); ds.forest <- data.frame(); missing <- c(NA); patch <- data.frame(); regen <- data.frame()
dbname <- paste0("raw_data/breakingTheSystem_", toupper(landscapename) ,"_Results/data", master$run_id[i], "/output.sqlite")
patch_file <- paste0("raw_data/breakingTheSystem_", toupper(landscapename) ,"_Results/data", master$run_id[i], "/patches.csv")
db.conn <- dbConnect(RSQLite::SQLite(), dbname = dbname) # output_baseline_rep1_size1_freq1_browsing1_fecundity75
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
## landscape output ####
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
ls.i <- tbl(db.conn, "landscape") %>%
dplyr::select(year, species, count_ha, basal_area_m2, gwl_m3, volume_m3, height_avg_m, cohort_count_ha) %>%
collect() %>%
mutate(climate = master$climate[i], rep = master$rep[i], size = master$sizeMod[i], freq = master$freqMod[i],
browsing = master$browsingMod[i], fecundity = master$fecundityMod[i],
identifier = paste0(master$climate[i], "_rep", master$rep[i], "_size", master$sizeMod[i], "_freq", master$freqMod[i],
"_browsing", master$browsingMod[i], "_fecundity", master$fecundityMod[i])) %>%
mutate(size = factor(size, levels = rev(c("10", "5", "2", "1"))),
freq = factor(freq, levels = rev(c("10", "5", "2", "1"))),
fecundity = factor(fecundity, levels = c("100", "50", "20", "10")),
browsing = factor(browsing, levels = rev(c("10", "5", "2", "1"))),
landscape = landscapename)
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# landscape_remove output ####
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
rem.i <- tbl(db.conn, "landscape_removed") %>%
dplyr::select(year, species, count, basal_area_m2, volume_m3, dbh_class, reason) %>%
collect() %>%
mutate(climate = master$climate[i], rep = master$rep[i], size = master$sizeMod[i], freq = master$freqMod[i],
browsing = master$browsingMod[i], fecundity = master$fecundityMod[i],
identifier = paste0(master$climate[i], "_rep", master$rep[i], "_size", master$sizeMod[i], "_freq", master$freqMod[i],
"_browsing", master$browsingMod[i], "_fecundity", master$fecundityMod[i])) %>%
mutate(size = factor(size, levels = rev(c("10", "5", "2", "1"))),
freq = factor(freq, levels = rev(c("10", "5", "2", "1"))),
fecundity = factor(fecundity, levels = c("100", "50", "20", "10")),
browsing = factor(browsing, levels = rev(c("10", "5", "2", "1"))),
landscape = landscapename)
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# dynamicstand output ####
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
ds.i <- tbl(db.conn, "dynamicstand") %>%
dplyr::select(-ru) %>%
collect() %>%
rename(basal_area_m2 = basalarea_sum, count_ha = if_height_0_1_0_sum) %>%
mutate(climate = master$climate[i], rep = master$rep[i], size = master$sizeMod[i], freq = master$freqMod[i],
browsing = master$browsingMod[i], fecundity = master$fecundityMod[i],
identifier = paste0(master$climate[i], "_rep", master$rep[i], "_size", master$sizeMod[i], "_freq", master$freqMod[i],
"_browsing", master$browsingMod[i], "_fecundity", master$fecundityMod[i])) %>%
mutate(size = factor(size, levels = rev(c("10", "5", "2", "1"))),
freq = factor(freq, levels = rev(c("10", "5", "2", "1"))),
fecundity = factor(fecundity, levels = c("100", "50", "20", "10")),
browsing = factor(browsing, levels = rev(c("10", "5", "2", "1"))),
landscape = landscapename)
# reference always baseline_rep1_size1_freq1_browsing1_fecundity100 (also for hot-dry runs)
# prop of basal area decreased by more than 50 %
ds.basal.i <- ds.i %>%
group_by(rid, climate, rep, size, freq, browsing, fecundity, identifier, landscape, year) %>%
summarise(basal_c = sum(basal_area_m2)) %>% ungroup() %>% # basal area sum per RU in 2020, 2050, 2100
inner_join(ds.ref %>%
group_by(rid, climate, size, freq, browsing, fecundity, landscape, year) %>%
summarise(basal_ref = sum(basal_area_m2)/5) %>% ungroup() %>% # basal area sum in 2020, 2050, 2100 under reference conditions
dplyr::select(rid, basal_ref, year), by = join_by(rid, year),
multiple = "all") %>%
filter(!is.na(basal_ref)) %>% # filter out RUs for which no reference conditions exist
group_by(climate, rep, size, freq, browsing, fecundity, identifier, landscape, year) %>%
mutate(basal_diff = (basal_c-basal_ref)/basal_ref, # relative change in basal area sum
threshold = ifelse(basal_diff < -0.5, "below", "above"), # count RUs where basal area dropped by more than 50% from reference; unidirectional: only if DECREASE > 50%
n_rid = length(unique(rid))) %>% ungroup()
# prop of dominant species changed
ds.dom.i <- ds.i %>%
group_by(rid, climate, rep, size, freq, browsing, fecundity, identifier, landscape, year) %>%
mutate(rel_count=count_ha/sum(count_ha), rel_basal=basal_area_m2/sum(basal_area_m2),
iv = rel_count+rel_basal) %>%
filter(iv == max(iv)) %>% ungroup() %>% # species with max IV in 2020, 2050, 2100
rename(dom_c = species) %>%
dplyr::select(rid, climate, rep, size, freq, browsing, fecundity, identifier, landscape, dom_c, year) %>%
inner_join(ds.ref %>%
group_by(rid, rep, climate, size, freq, browsing, fecundity, identifier, landscape, year) %>%
mutate(rel_count=count_ha/sum(count_ha), rel_basal=basal_area_m2/sum(basal_area_m2),
iv = rel_count+rel_basal) %>%
filter(iv == max(iv)) %>% # species with max IV in 2020, 2050, 2100 under reference conditions
ungroup() %>% rename(dom_ref = species) %>%
dplyr::select(rid, dom_ref, year) %>%
# chose most common dominant species by majority vote
group_by(rid, year, dom_ref) %>%
mutate(n_species = n()) %>% ungroup() %>%
group_by(rid, year) %>%
filter(n_species == max(n_species)) %>%
dplyr::select(-n_species) %>% distinct() %>%
# if rids have multiple equally popular dominant species: sample one randomly
mutate(n_rows=n(),
dom_ref = ifelse(n_rows > 1, sample(unique(dom_ref), 1), dom_ref)) %>% ungroup() %>%
dplyr::select(-n_rows) %>% distinct(), by = join_by(rid, year),
multiple = "all") %>% #summary()
filter(!is.na(dom_ref)) %>% # filter out RUs for which no reference conditions exist
group_by(climate, rep, size, freq, browsing, fecundity, identifier, landscape, year) %>%
mutate(threshold = ifelse(dom_c == dom_ref, "same", "different"), # count RUs where dominant species changed
n_rid = length(unique(rid))) %>% ungroup()
# prop of trees count > 50
ds.forest.i <- ds.i %>%
group_by(rid, climate, rep, size, freq, browsing, fecundity, identifier, landscape, year) %>%
summarise(count_sum_c = sum(count_ha)) %>% ungroup() %>% # tree count sum in 2020, 2050, 2100
inner_join(ds.ref %>%
group_by(rid, climate, size, freq, browsing, fecundity, landscape, year) %>%
summarise(count_sum_ref = sum(count_ha)/5) %>% ungroup() %>% # tree count sum in 2020, 2050, 2100 under reference conditions
dplyr::select(rid, count_sum_ref, year), by = join_by(rid, year),
multiple = "all") %>%
filter(!is.na(count_sum_ref)) %>% # filter out RUs for which no reference conditions exist
group_by(climate, rep, size, freq, browsing, fecundity, identifier, landscape, year) %>%
mutate(threshold = as.factor(ifelse(count_sum_c < 50 & count_sum_ref >= 50, "non-forest", "forest")), # count RUs where tree count dropped below 50 (and reference value is also higher than 50)
n_rid = length(unique(rid))) %>% ungroup()
dbDisconnect(db.conn)
head(ds.forest.i)
ds.forest.i %>% filter(year==80)
ds.forest.i %>% filter(year==80) %>% filter(threshold!="forest")
View(regen.i)
ls.i %>%
group_by(landscape, year, identifier, size, freq, climate, rep, browsing, fecundity) %>%
summarise(count.sum = sum(count_ha)) %>% ungroup() %>%
mutate(count.previous = lag(count.sum),
zuwachs = count.sum - count.previous) %>% ungroup() %>%
filter(year > 0) %>%
full_join(rem.i %>%
filter(year > 0) %>%
mutate(count_ha = count/areas[landscape_i, "area"]) %>%
group_by(landscape, year) %>% # sum up over species + causes of death
summarise(died = sum(count_ha)) %>% ungroup(), by = c("year", "landscape")) %>%
mutate(born = zuwachs + died) %>%
group_by(landscape, year, identifier, size, freq, climate, rep, browsing, fecundity)
# regeneration rate ####
regen.i <- ls.i %>%
group_by(landscape, year, identifier, size, freq, climate, rep, browsing, fecundity) %>%
summarise(count.sum = sum(count_ha)) %>% ungroup() %>%
mutate(count.previous = lag(count.sum),
zuwachs = count.sum - count.previous) %>% ungroup() %>%
filter(year > 0) %>%
full_join(rem.i %>%
filter(year > 0) %>%
mutate(count_ha = count/areas[landscape_i, "area"]) %>%
group_by(landscape, year) %>% # sum up over species + causes of death
summarise(died = sum(count_ha)) %>% ungroup(), by = c("year", "landscape")) %>%
mutate(recruited_mean = zuwachs + died)
library(plotly)
fig <- plot_ly(z = ~volcano)
fig <- fig %>% add_surface()
library(plotly)
fig <- plot_ly(z = ~volcano)
fig
fig <- fig %>% add_surface()
fig
volcano
patch.df <- bind_rows(readRDS("results/datasets/patch_bgd_backup.RDATA"),
readRDS("results/datasets/patch_grte_backup.RDATA"),
readRDS("results/datasets/patch_stoko_backup.RDATA")) %>%
group_by(landscape, climate, rep, size, freq, browsing, fecundity, year) %>% # don't group by agent
summarise(area_disturbed = sum(n_cells)) %>%
mutate(size = factor(size, levels = rev(c("10", "5", "2", "1"))),
freq = factor(freq, levels = rev(c("10", "5", "2", "1"))),
fecundity = factor(fecundity, levels = c("100", "50", "20", "10")),
browsing = factor(browsing, levels = rev(c("10", "5", "2", "1")))) %>%
full_join(areas, by="landscape")
### disturbance rate ####
# overall mean disturbance rate on x-axis
dist.dyn.df <- bind_rows(overtime.ls[["bgd"]], overtime.ls[["grte"]],overtime.ls[["stoko"]]) %>%
filter(climate=="baseline", year==80) %>% dplyr::select(-year) %>%
full_join(patch.df %>%
filter(climate=="baseline",
year %in% 1:10) %>%
group_by(climate, size, freq, browsing, fecundity, landscape, rep, area) %>%
# mean yearly disturbance rate: area_disturbed to ha -> divide by landscape area -> convert to %
summarise(dist.dyn = mean(area_disturbed/100/area*100),
n_year = length(unique(year))) ,
by=c("climate", "rep", "size", "freq", "browsing", "fecundity", "landscape")) %>%
pivot_longer(9:11) %>%
mutate(dist.dyn = ifelse(is.na(dist.dyn), 0, dist.dyn))
dist.dyn.df
patch.df
patch.df <- bind_rows(readRDS("results/datasets/patch_bgd_backup.RDATA"),
readRDS("results/datasets/patch_grte_backup.RDATA"),
readRDS("results/datasets/patch_stoko_backup.RDATA")) %>%
group_by(landscape, climate, rep, size, freq, browsing, fecundity, year) %>% # don't group by agent
summarise(area_disturbed = sum(n_cells)) %>%
mutate(size = factor(size, levels = rev(c("10", "5", "2", "1"))),
freq = factor(freq, levels = rev(c("10", "5", "2", "1"))),
fecundity = factor(fecundity, levels = c("100", "50", "20", "10")),
browsing = factor(browsing, levels = rev(c("10", "5", "2", "1")))) %>%
full_join(areas, by="landscape")
patch.df <- bind_rows(readRDS("results/datasets/patch_bgd_backup.RDATA"),
readRDS("results/datasets/patch_grte_backup.RDATA"),
readRDS("results/datasets/patch_stoko_backup.RDATA")) %>%
group_by(landscape, climate, rep, size, freq, browsing, fecundity, year) %>% # don't group by agent
summarise(area_disturbed = sum(n_cells)) %>%
mutate(size = factor(size, levels = rev(c("10", "5", "2", "1"))),
freq = factor(freq, levels = rev(c("10", "5", "2", "1"))),
fecundity = factor(fecundity, levels = c("100", "50", "20", "10")),
browsing = factor(browsing, levels = rev(c("10", "5", "2", "1")))) %>%
full_join(areas, by="landscape")
regen.df <- bind_rows(readRDS("results/datasets/regen_bgd_backup.RDATA"),
readRDS("results/datasets/regen_grte_backup.RDATA"),
readRDS("results/datasets/regen_stoko_backup.RDATA")) %>%
mutate(size = factor(size, levels = rev(c("10", "5", "2", "1"))),
freq = factor(freq, levels = rev(c("10", "5", "2", "1"))),
fecundity = factor(fecundity, levels = c("100", "50", "20", "10")),
browsing = factor(browsing, levels = rev(c("10", "5", "2", "1")))) %>%
full_join(areas, by="landscape")
### disturbance rate ####
# overall mean disturbance rate on x-axis
dist.dyn.df <- bind_rows(overtime.ls[["bgd"]], overtime.ls[["grte"]],overtime.ls[["stoko"]]) %>%
filter(climate=="baseline", year==80) %>% dplyr::select(-year) %>%
full_join(patch.df %>%
filter(climate=="baseline",
year %in% 1:10) %>%
group_by(climate, size, freq, browsing, fecundity, landscape, rep, area) %>%
# mean yearly disturbance rate: area_disturbed to ha -> divide by landscape area -> convert to %
summarise(dist.dyn = mean(area_disturbed/100/area*100),
n_year = length(unique(year))) ,
by=c("climate", "rep", "size", "freq", "browsing", "fecundity", "landscape")) %>%
pivot_longer(9:11) %>%
mutate(dist.dyn = ifelse(is.na(dist.dyn), 0, dist.dyn))
dist.dyn.df
nrow(dist.dyn.df)
nrow(dist.dyn.df)/3
nrow(dist.dyn.df)/6
1920*2
patch.df %>%
filter(climate=="baseline",
year %in% 1:10) %>%
group_by(climate, size, freq, browsing, fecundity, landscape, rep, area) %>%
# mean yearly disturbance rate: area_disturbed to ha -> divide by landscape area -> convert to %
summarise(dist.dyn = mean(area_disturbed/100/area*100),
n_year = length(unique(year)))
4*4*4*4*3*5
4*4*4*4*3*5*3
### regeneration rate ####
# overall mean regeneration rate on x-axis
regen.dyn.df <- bind_rows(overtime.ls[["bgd"]], overtime.ls[["grte"]],overtime.ls[["stoko"]]) %>%
filter(climate=="baseline", year==80) %>% dplyr::select(-year) %>%
full_join(regen.df %>%
filter(climate=="baseline",
year %in% 1:80) %>%
group_by(climate, size, freq, browsing, fecundity, landscape, rep, area) %>%
summarise(regen.dyn = mean(born),
n_year = length(unique(year))),
by=c("climate", "rep", "size", "freq", "browsing", "fecundity", "landscape")) %>%
pivot_longer(9:11) %>%
mutate(regen.dyn = ifelse(is.na(regen.dyn), 0, regen.dyn))
dist.dyn.df
library(tidylog)
dist.dyn.df %>% full_join(regen.dyn.df)
dist.dyn.df %>% dplyr::select(-n_year) %>% full_join(regen.dyn.df %>% dplyr::select(-n_year))
dist.dyn.df %>% dplyr::select(-n_year) %>% full_join(regen.dyn.df %>% dplyr::select(-n_year)) %>% summary()
dist.dyn.df %>% dplyr::select(-n_year) %>% full_join(regen.dyn.df %>% dplyr::select(-n_year)) %>% filter(is.na(value))
dist.dyn.df %>% filter(rep==1,size==1,freq==1,browsing==1,fecundity==100)
dist.dyn.df %>% filter(rep==1,size==1,freq==1,browsing==1,fecundity==100, landscape=="grte")
dist.dyn.df %>% dplyr::select(-n_year) %>% full_join(regen.dyn.df %>% dplyr::select(-n_year)) %>% filter(is.na(value))
dist.dyn.df %>% filter(rep==1,size==1,freq==10,browsing==1,fecundity==100, landscape=="grte")
dist.dyn.df %>% dplyr::select(-n_year) %>% full_join(regen.dyn.df %>% dplyr::select(-n_year)) %>% drop_na()
dist.dyn.df %>% dplyr::select(-n_year) %>% full_join(regen.dyn.df %>% dplyr::select(-n_year)) %>% drop_na() %>%
filter(landscape=="bgd") %>%
dplyr::select(dist.dyn, regen.dyn)
unique(dist.dyn.df$name)
dist.dyn.df %>% dplyr::select(-n_year) %>% full_join(regen.dyn.df %>% dplyr::select(-n_year)) %>% drop_na() %>%
filter(landscape=="bgd", name=="1. Structure\nBasal area decreased by >50 % from reference") %>%
dplyr::select(dist.dyn, regen.dyn)
dist.dyn.df %>% dplyr::select(-n_year) %>% full_join(regen.dyn.df %>% dplyr::select(-n_year)) %>% drop_na() %>%
filter(landscape=="bgd", name=="1. Structure\nBasal area decreased by >50 % from reference") %>%
dplyr::select(dist.dyn, regen.dyn, value)
dist.dyn.df %>% dplyr::select(-n_year) %>% full_join(regen.dyn.df %>% dplyr::select(-n_year)) %>% drop_na() %>%
filter(landscape=="bgd", name=="1. Structure\nBasal area decreased by >50 % from reference") %>%
dplyr::select(dist.dyn, regen.dyn, value) %>%
data.matrix()
dist.dyn.df %>% dplyr::select(-n_year) %>% full_join(regen.dyn.df %>% dplyr::select(-n_year)) %>% drop_na() %>%
filter(landscape=="bgd", name=="1. Structure\nBasal area decreased by >50 % from reference") %>%
dplyr::select(dist.dyn, regen.dyn, value) %>%
as.matrix()
rate.df <- dist.dyn.df %>% dplyr::select(-n_year) %>% full_join(regen.dyn.df %>% dplyr::select(-n_year)) %>% drop_na() %>%
filter(landscape=="bgd", name=="1. Structure\nBasal area decreased by >50 % from reference") %>%
dplyr::select(dist.dyn, regen.dyn, value)
trans_df <- xtabs(value ~ dist.dyn + regen.dyn, rate.df)
trans_df
fig <- plot_ly(z = ~trans_df)
fig <- fig %>% add_surface()
fig
trans_df
fig <- fig %>% add_mesh()
fig <- plot_ly(z = ~trans_df)
fig <- fig %>% add_mesh()
fig
rate.df
?outer()
plot_ly(x = rate.df$dist.dyn, y = rate.df$regen.dyn, z = rate.df$value, type = "surface")
rate.df$dist.dyn
x <- seq(-5, 5, length.out = 50)
y <- seq(-5, 5, length.out = 50)
f <- function(x, y) { x^2 + y^2 }
x
rate.df$dist.dyn %>% length()
rate.df$regen.dyn %>% length()
rate.df$value %>% length()
rate.df$value %>% summary()
rate.df$regen.dyn %>% summary()
rate.df$dist.dyn %>% summary()
x <- seq(-5, 5, length.out = 50)
y <- seq(-5, 5, length.out = 50)
f <- function(x, y) { x^2 + y^2 }
x <- seq(-5, 5, length.out = 50)
y <- seq(-5, 5, length.out = 50)
f <- function(x, y) { x^2 + y^2 }
outer(x,y,f)
seq(min(rate.df$dist.dyn), max(rate.df$dist.dyn), length.out=1280)
plot_ly(x = seq(min(rate.df$dist.dyn), max(rate.df$dist.dyn), length.out=1280),
y = seq(min(rate.df$regen.dyn), max(rate.df$regen.dyn), length.out=1280),
z = trans_df, type = "surface")
round(c(1:10)/1000, 2)
dist.dyn.df %>% dplyr::select(-n_year) %>% full_join(regen.dyn.df %>% dplyr::select(-n_year)) %>% drop_na() %>%
mutate(dist.dyn.new = round(dist.dyn/1000, 2))
dist.dyn.df %>% dplyr::select(-n_year) %>% full_join(regen.dyn.df %>% dplyr::select(-n_year)) %>% drop_na() %>%
mutate(dist.dyn.new = round(dist.dyn/10, 2))
dist.dyn.df %>% dplyr::select(-n_year) %>% full_join(regen.dyn.df %>% dplyr::select(-n_year)) %>% drop_na() %>%
mutate(dist.dyn.new = round(dist.dyn/10, 3))
dist.dyn.df %>% dplyr::select(-n_year) %>% full_join(regen.dyn.df %>% dplyr::select(-n_year)) %>% drop_na() %>%
mutate(dist.dyn.new = round(dist.dyn/10, 3)*10)
dist.dyn.df %>% dplyr::select(-n_year) %>% full_join(regen.dyn.df %>% dplyr::select(-n_year)) %>% drop_na() %>%
mutate(dist.dyn.new = round(dist.dyn/10, 3)*10,
regen.dyn.new = round(regen.dyn/10, 3)*10)
dist.dyn.df %>% dplyr::select(-n_year) %>% full_join(regen.dyn.df %>% dplyr::select(-n_year)) %>% drop_na() %>%
mutate(dist.dyn.new = round(dist.dyn/10, 3)*10,
regen.dyn.new = round(regen.dyn/1000, 2)*1000)
dist.dyn.df %>% dplyr::select(-n_year) %>% full_join(regen.dyn.df %>% dplyr::select(-n_year)) %>% drop_na() %>%
mutate(dist.dyn.new = round(dist.dyn/10, 3)*10,
regen.dyn.new = round(regen.dyn/1000, 2)*1000) %>%
group_by(identifier, landscape, name, dist.dyn.new, regen.dyn.new)
dist.dyn.df %>% dplyr::select(-n_year) %>% full_join(regen.dyn.df %>% dplyr::select(-n_year)) %>% drop_na() %>%
mutate(dist.dyn.new = round(dist.dyn/10, 3)*10,
regen.dyn.new = round(regen.dyn/1000, 2)*1000) %>%
group_by(landscape, name, dist.dyn.new, regen.dyn.new)
rate.df <- dist.dyn.df %>% dplyr::select(-n_year) %>% full_join(regen.dyn.df %>% dplyr::select(-n_year)) %>% drop_na() %>%
mutate(dist.dyn.new = round(dist.dyn/10, 3)*10,
regen.dyn.new = round(regen.dyn/1000, 2)*1000) %>%
group_by(landscape, name, dist.dyn.new, regen.dyn.new) %>%
summarise(value=mean(value)) %>%
filter(landscape=="bgd", name=="1. Structure\nBasal area decreased by >50 % from reference") %>%
dplyr::select(dist.dyn.new, regen.dyn.new, value)
View(rate.df)
rate.df <- dist.dyn.df %>% dplyr::select(-n_year) %>% full_join(regen.dyn.df %>% dplyr::select(-n_year)) %>% drop_na() %>%
mutate(dist.dyn.new = round(dist.dyn/10, 3)*10,
regen.dyn.new = round(regen.dyn/1000, 2)*1000) %>%
group_by(landscape, name, dist.dyn.new, regen.dyn.new) %>%
summarise(value=mean(value)) %>%
filter(name=="1. Structure\nBasal area decreased by >50 % from reference") %>%
dplyr::select(dist.dyn.new, regen.dyn.new, value)
View(rate.df)
rate.df <- dist.dyn.df %>% dplyr::select(-n_year) %>% full_join(regen.dyn.df %>% dplyr::select(-n_year)) %>% drop_na() %>%
mutate(dist.dyn.new = round(dist.dyn/10, 3)*10,
regen.dyn.new = round(regen.dyn/1000, 2)*1000) %>%
group_by(landscape, name, dist.dyn.new, regen.dyn.new) %>%
summarise(value=mean(value)) %>%
filter(name=="1. Structure\nBasal area decreased by >50 % from reference") %>%
dplyr::select(dist.dyn.new, regen.dyn.new, value) %>%
distinct()
trans_df <- xtabs(value ~ dist.dyn.new + regen.dyn.new, rate.df)
nrow(trans_df)
seq(min(rate.df$regen.dyn), max(rate.df$regen.dyn), length.out=ncol(trans_df)
seq(min(rate.df$regen.dyn), max(rate.df$regen.dyn), length.out=ncol(trans_df))
seq(min(rate.df$regen.dyn), max(rate.df$regen.dyn), length.out=ncol(trans_df))
seq(min(rate.df$regen.dyn.new), max(rate.df$regen.dyn), length.out=ncol(trans_df))
seq(min(rate.df$regen.dyn.new), max(rate.df$regen.dyn.new), length.out=ncol(trans_df))
plot_ly(x = seq(min(rate.df$dist.dyn.new), max(rate.df$dist.dyn.new), length.out=nrow(trans_df)),
y = seq(min(rate.df$regen.dyn.new), max(rate.df$regen.dyn.new), length.out=ncol(trans_df)),
z = trans_df, type = "surface")
rate.df <- dist.dyn.df %>% dplyr::select(-n_year) %>% full_join(regen.dyn.df %>% dplyr::select(-n_year)) %>% drop_na() %>%
# mutate(dist.dyn = round(dist.dyn/10, 3)*10,
#        regen.dyn = round(regen.dyn/1000, 2)*1000) %>%
group_by(landscape, name, dist.dyn, regen.dyn) %>%
summarise(value=mean(value)) %>%
filter(name=="1. Structure\nBasal area decreased by >50 % from reference") %>%
dplyr::select(dist.dyn, regen.dyn, value) %>%
distinct()
View(rate.df)
trans_df <- xtabs(value ~ dist.dyn + regen.dyn, rate.df)
fig <- plot_ly(z = ~trans_df)
fig <- fig %>% add_surface()
fig
plot_ly(x = seq(min(rate.df$dist.dyn), max(rate.df$dist.dyn), length.out=nrow(trans_df)),
y = seq(min(rate.df$regen.dyn), max(rate.df$regen.dyn), length.out=ncol(trans_df)),
z = trans_df, type = "surface")
seq(min(rate.df$dist.dyn), max(rate.df$dist.dyn), length.out=nrow(trans_df))
nrow(trans_df)
View(rate.df)
length(unique(rate.df$regen.dyn))
length(unique(rate.df$dist.dyn))
summary(rate.df)
dist.dyn.df %>% dplyr::select(-n_year) %>% full_join(regen.dyn.df %>% dplyr::select(-n_year)) %>% drop_na() %>%
# mutate(dist.dyn = round(dist.dyn/10, 3)*10,
#        regen.dyn = round(regen.dyn/1000, 2)*1000) %>%
group_by(landscape, name, dist.dyn, regen.dyn)
rate.df <- dist.dyn.df %>% dplyr::select(-n_year) %>% full_join(regen.dyn.df %>% dplyr::select(-n_year)) %>% drop_na() %>%
# mutate(dist.dyn = round(dist.dyn/10, 3)*10,
#        regen.dyn = round(regen.dyn/1000, 2)*1000) %>%
# group_by(landscape, name, dist.dyn, regen.dyn) %>%
# summarise(value=mean(value)) %>%
filter(name=="1. Structure\nBasal area decreased by >50 % from reference") %>%
dplyr::select(dist.dyn, regen.dyn, value) %>%
distinct()
trans_df <- xtabs(value ~ dist.dyn + regen.dyn, rate.df)
plot_ly(x = seq(min(rate.df$dist.dyn), max(rate.df$dist.dyn), length.out=nrow(trans_df)),
y = seq(min(rate.df$regen.dyn), max(rate.df$regen.dyn), length.out=ncol(trans_df)),
z = trans_df, type = "surface")
seq(min(rate.df$dist.dyn), max(rate.df$dist.dyn), length.out=nrow(trans_df))
trans_df
plot_ly(x = seq(min(rate.df$dist.dyn), max(rate.df$dist.dyn), length.out=nrow(trans_df)),
y = seq(min(rate.df$regen.dyn), max(rate.df$regen.dyn), length.out=ncol(trans_df)),
z = trans_df, type = "mesh")
plot_ly(x = seq(min(rate.df$dist.dyn), max(rate.df$dist.dyn), length.out=nrow(trans_df)),
y = seq(min(rate.df$regen.dyn), max(rate.df$regen.dyn), length.out=ncol(trans_df)),
z = trans_df, type = "contourcarpet")
plot_ly(x = seq(min(rate.df$dist.dyn), max(rate.df$dist.dyn), length.out=nrow(trans_df)),
y = seq(min(rate.df$regen.dyn), max(rate.df$regen.dyn), length.out=ncol(trans_df)),
z = trans_df, type = "table")
plot_ly(x = seq(min(rate.df$dist.dyn), max(rate.df$dist.dyn), length.out=nrow(trans_df)),
y = seq(min(rate.df$regen.dyn), max(rate.df$regen.dyn), length.out=ncol(trans_df)),
z = trans_df, type = "waterfall")
rate.df <- dist.dyn.df %>% dplyr::select(-n_year) %>% full_join(regen.dyn.df %>% dplyr::select(-n_year)) %>% drop_na() %>%
filter(name=="1. Structure\nBasal area decreased by >50 % from reference") %>%
dplyr::select(dist.dyn, regen.dyn, value) %>%
distinct()
mod2 <- loess(rate.df$value ~ rate.df$dist.dyn + rate.df$regen.dyn)
mod2
grd<- data.frame(x1=seq(range(x1)[1],range(x1)[2],len=20),
x2=seq(range(x2)[1],range(x2)[2],len=20))
grd<- data.frame(x1=seq(range(rate.df$dist.dyn)[1],range(rate.df$dist.dyn)[2],len=20),
x2=seq(range(rate.df$regen.dyn)[1],range(rate.df$regen.dyn)[2],len=20))
grd
grd$pred <- predict(mod2, newdata=grd)
predict(mod2, newdata=grd)
grd<- data.frame(x1=seq(range(rate.df$dist.dyn)[1],range(rate.df$dist.dyn)[2],len=nrow(rate.df)),
x2=seq(range(rate.df$regen.dyn)[1],range(rate.df$regen.dyn)[2],len=nrow(rate.df)))
View(grd)
grd$pred <- predict(mod2, newdata=grd)
grd <- grd[order(grd$x1,grd$x2),]
x1 <- unique(grd$x1)
x2 <- unique(grd$x2)   # shouldn't have used y
surface3d(x1, x2, z=matrix(grd$pred,length(x1),length(x2)) )
??surface3d
library(rgl)
surface3d(x1, x2, z=matrix(grd$pred,length(x1),length(x2)) )
matrix(grd$pred,length(x1),length(x2))
grd$pred
grd$pred %>% summary()
length(x1)
length(x2)
a<-matrix(grd$pred,length(x1),length(x2))
View(a)
x1
surface3d(x1, x2, z=matrix(grd$pred,length(x1),length(x2)) )
png("test.png")
surface3d(x1, x2, z=matrix(grd$pred,length(x1),length(x2)) )
dev.off()
getwd()
rgl:::.getRanges()
?.getRanges
?getRanges
grd <- data.frame(x1=seq(range(rate.df$dist.dyn)[1],range(rate.df$dist.dyn)[2],len=1000),
x2=seq(range(rate.df$regen.dyn)[1],range(rate.df$regen.dyn)[2],len=1000))
predict(mod2, newdata=grd)
grd <- data.frame(x1=seq(range(rate.df$dist.dyn)[1],range(rate.df$dist.dyn)[2],len=100000),
x2=seq(range(rate.df$regen.dyn)[1],range(rate.df$regen.dyn)[2],len=100000))
grd <- data.frame(x1=seq(range(rate.df$dist.dyn)[1],range(rate.df$dist.dyn)[2],len=10000),
x2=seq(range(rate.df$regen.dyn)[1],range(rate.df$regen.dyn)[2],len=10000))
grd$pred <- predict(mod2, newdata=grd)
predict(mod2, newdata=grd)
summary(mod2)
View(mod2)
predict(mod2)
mod2 <- loess(value ~ dist.dyn + regen.dyn, data=rate.df)
grd <- data.frame(x1=seq(range(rate.df$dist.dyn)[1],range(rate.df$dist.dyn)[2],len=100),
x2=seq(range(rate.df$regen.dyn)[1],range(rate.df$regen.dyn)[2],len=100))
grd$pred <- predict(mod2, newdata=grd)
mod2 <- loess(rate.df$value ~ rate.df$dist.dyn + rate.df$regen.dyn)
grd <- data.frame(x1=seq(range(rate.df$dist.dyn)[1],range(rate.df$dist.dyn)[2],len=10000),
x2=seq(range(rate.df$regen.dyn)[1],range(rate.df$regen.dyn)[2],len=10000))
grd$pred <- predict(mod2, newdata=grd)
mod2 = lm(rate.df$value ~ rate.df$dist.dyn + rate.df$regen.dyn)
open3d()
plot3d(x=rate.df$dist.dyn, y= rate.df$regen.dyn, z=rate.df$value, type="s", col="red", size=1)
dev.off()
dev.off()
plot3d(x=rate.df$dist.dyn, y=rate.df$regen.dyn, z=rate.df$value, type="s", col="red", size=1)
open3d()
plot3d(x=rate.df$dist.dyn, y=rate.df$regen.dyn, z=rate.df$value, type="s", col="red", size=1)
open3d()
plot3d(x=rate.df$dist.dyn, y=rate.df$regen.dyn, z=rate.df$value, type="s", col="red", size=1)
