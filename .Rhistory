annotate_figure(top = "Composition: dominant species changed from reference",
left = "Proportion of unchanged landscape [%]"
)
png(paste0("results/figures/lineplot_dom80_", landscapename ,".png"), res=200,
height=1000, width=2000)
ggpubr::ggarrange(dom.ls[[1]], dom.ls[[2]], dom.ls[[3]], dom.ls[[4]], common.legend = T) %>%
annotate_figure(top = "Composition: dominant species changed from reference",
left = "Proportion of unchanged landscape [%]"
)
dev.off()
# forest/non-forest
plot.forest.fc <- function(var) {
others <- vars[vars %ni% var]
copy <- overTime %>% filter(year==80)
var_use <- copy %>% pull(var)
copy$groups <- paste(copy %>% pull(all_of(others[1])),
copy %>% pull(all_of(others[2])),
copy %>% pull(all_of(others[3])),
copy %>% pull(rep),
copy %>% pull(climate))
copy %>%
rename(prop = 12) %>%
ggplot(aes(x=var_use, y=prop*100, group=groups, col=climate)) +
geom_line(linewidth=0.8) +
scale_color_manual(values=c("baseline" ="blue", "hotdry" = "red")) +
labs(x=var, y="", col="Climate scenario") +
theme_bw()
}; forest.ls <- lapply(vars, plot.forest.fc)
ggpubr::ggarrange(forest.ls[[1]], forest.ls[[2]], forest.ls[[3]], forest.ls[[4]], common.legend = T) %>%
annotate_figure(top = "Remaining forest: stem density dropping below 50 trees/ha",
left = "Proportion of unchanged landscape [%]"
)
png(paste0("results/figures/lineplot_forest80_", landscapename ,".png"), res=200,
height=1000, width=2000)
ggpubr::ggarrange(forest.ls[[1]], forest.ls[[2]], forest.ls[[3]], forest.ls[[4]], common.legend = T) %>%
annotate_figure(top = "Remaining forest: stem density dropping below 50 trees/ha",
left = "Proportion of unchanged landscape [%]"
)
dev.off()
# structure
basal.map <- ds.ls[["basal"]] %>%
filter(year==80,
threshold=="above") %>%
group_by(climate) %>%
mutate(chances = length(unique(identifier))) %>% ungroup() %>%
group_by(rid, climate) %>%
summarise(unchanged = mean(sum(n())/chances)*100) %>% ungroup() %>%
full_join(rid.df[rid.df$landscape==landscapename,]) %>%
dplyr::select(climate, x,y,unchanged) %>%
mutate(unchanged = ifelse(is.na(unchanged), 0, unchanged))
basal.map %>% filter(climate=="baseline") %>% dplyr::select(-climate) %>% filter(!is.na(x)) %>%
rast() %>% plot(range=c(0,100), cex.main=0.5, type="continuous",
main="1. Structure: basal area decreased by >50 % from reference\nBaseline climate\nPercentage of runs where cell's structure remained unchanged [%]")
png(paste0("results/figures/map_prop_basal80_baseline_", landscapename ,".png"), res=200,
height=1000, width=1000)
basal.map %>% filter(climate=="baseline") %>% dplyr::select(-climate) %>% filter(!is.na(x)) %>%
rast() %>% plot(range=c(0,100), cex.main=0.5, type="continuous",
main="1. Structure: basal area decreased by >50 % from reference\nBaseline climate\nPercentage of runs where cell's structure remained unchanged [%]")
dev.off()
png(paste0("results/figures/map_prop_basal80_hotdry_", landscapename ,".png"), res=200,
height=1000, width=1000)
basal.map %>% filter(climate=="hotdry") %>% dplyr::select(-climate) %>% filter(!is.na(x)) %>%
rast() %>% plot(range=c(0,100), cex.main=0.5, type="continuous",
main="1. Structure: basal area decreased by >50 % from reference\nHot-dry climate\nPercentage of runs where cell's structure remained unchanged [%]")
dev.off()
# composition
dom.map <- ds.ls[["dom"]] %>%
filter(year==80,
threshold=="same") %>%
group_by(climate) %>%
mutate(chances = length(unique(identifier))) %>% ungroup() %>%
group_by(rid, climate) %>%
summarise(unchanged = mean(sum(n())/chances)*100) %>% ungroup() %>%
full_join(rid.df[rid.df$landscape==landscapename,]) %>%
dplyr::select(x,y,unchanged, climate) %>%
mutate(unchanged = ifelse(is.na(unchanged), 0, unchanged))
png(paste0("results/figures/map_prop_dom80_baseline_", landscapename ,".png"), res=200,
height=1000, width=1000)
dom.map %>% filter(climate=="baseline") %>% dplyr::select(-climate) %>% filter(!is.na(x)) %>%
rast() %>% plot(range=c(0,100), cex.main=0.5, type="continuous",
main="2. Composition: dominant species changed from reference\nBaseline climate\nPercentage of runs where cell's dominant species remained unchanged [%]")
dev.off()
png(paste0("results/figures/map_prop_dom80_hotdry_", landscapename ,".png"), res=200,
height=1000, width=1000)
dom.map %>% filter(climate=="hotdry") %>% dplyr::select(-climate) %>% filter(!is.na(x)) %>%
rast() %>% plot(range=c(0,100), cex.main=0.5, type="continuous",
main="2. Composition: dominant species changed from reference\nHot-dry climate\nPercentage of runs where cell's dominant species remained unchanged [%]")
dev.off()
# forest
forest.map <- ds.ls[["forest"]] %>%
filter(year==80,
threshold=="forest") %>%
group_by(climate) %>%
mutate(chances = length(unique(identifier))) %>% ungroup() %>%
group_by(rid, climate) %>%
summarise(unchanged = mean(sum(n())/chances)*100) %>% ungroup() %>%
full_join(rid.df[rid.df$landscape==landscapename,]) %>%
dplyr::select(x,y,unchanged, climate)
forest.map %>% filter(climate=="baseline") %>% dplyr::select(-climate) %>% filter(!is.na(x)) %>%
rast() %>% plot(range=c(0,100), cex.main=0.5, type="continuous",
main="3. Remaining forest: stem density dropping below 50 trees/ha\nBaseline climate\nPercentage of runs where cell remained forested [%]")
png(paste0("results/figures/map_prop_forest80_baseline_", landscapename ,".png"), res=200,
height=1000, width=1000)
forest.map %>% filter(climate=="baseline") %>% dplyr::select(-climate) %>% filter(!is.na(x)) %>%
rast() %>% plot(range=c(0,100), cex.main=0.5, type="continuous",
main="3. Remaining forest: stem density dropping below 50 trees/ha\nBaseline climate\nPercentage of runs where cell remained forested [%]")
dev.off()
forest.map %>% filter(climate=="hotdry") %>% dplyr::select(-climate) %>% filter(!is.na(x)) %>%
rast() %>% plot(range=c(0,100), cex.main=0.5, type="continuous",
main="3. Remaining forest: stem density dropping below 50 trees/ha\nHot-dry climate\nPercentage of runs where cell remained forested [%]")
png(paste0("results/figures/map_prop_forest80_hotdry_", landscapename ,".png"), res=200,
height=1000, width=1000)
forest.map %>% filter(climate=="hotdry") %>% dplyr::select(-climate) %>% filter(!is.na(x)) %>%
rast() %>% plot(range=c(0,100), cex.main=0.5, type="continuous",
main="3. Remaining forest: stem density dropping below 50 trees/ha\nHot-dry climate\nPercentage of runs where cell remained forested [%]")
dev.off()
# baseline climate
db.conn <- dbConnect(RSQLite::SQLite(), paste0("../project2ndStudy/projectTest_", landscapename,"/output/",landscapename, "_baseline_disturbanceModulesEnabled.sqlite"))
dist1 <- tbl(db.conn, "landscape_removed") %>%
collect() %>%
mutate(climate = "baseline")
dist.ls1 <- tbl(db.conn, "landscape") %>%
collect() %>%
mutate(climate = "baseline")
dist.ds1 <- tbl(db.conn, "dynamicstand") %>%
collect() %>%
mutate(climate = "baseline")
dbDisconnect(db.conn); rm(db.conn)
# hotdry climate
db.conn <- dbConnect(RSQLite::SQLite(), paste0("../project2ndStudy/projectTest_", landscapename,"/output/",landscapename, "_hotdry_disturbanceModulesEnabled.sqlite"))
dist2 <- tbl(db.conn, "landscape_removed") %>%
collect() %>%
mutate(climate = "hotdry")
dist.ls2 <- tbl(db.conn, "landscape") %>%
collect() %>%
mutate(climate = "hotdry")
dist.ds2 <- tbl(db.conn, "dynamicstand") %>%
collect() %>%
mutate(climate = "hotdry")
dbDisconnect(db.conn); rm(db.conn)
dist <- bind_rows(dist1, dist2); rm(dist1, dist2)
dist.ls <- bind_rows(dist.ls1, dist.ls2); rm(dist.ls1, dist.ls2)
dist.ds <- bind_rows(dist.ds1, dist.ds2); rm(dist.ds1, dist.ds2)
saveRDS(dist, paste0("results/datasets/dist_", landscapename, ".RDATA"))
saveRDS(dist.ls, paste0("results/datasets/dist.ls_", landscapename, ".RDATA"))
saveRDS(dist.ds, paste0("results/datasets/dist.ds_", landscapename, ".RDATA"))
ls %>%
filter(climate=="hotdry") %>%
mutate(species = ifelse(species %in% common.species[[landscapename]], species, "other")) %>%
dplyr::select(year, climate, species, count_ha, cohort_count_ha, basal_area_m2) %>%
pivot_longer(cols=4:6) %>%
group_by(year, species, name) %>%
summarise(value=mean(value)) %>%
ggplot(aes(x=year, y=value, fill=species)) +
geom_bar(stat="identity", width=1.1) +
geom_vline(aes(xintercept=31)) +
facet_wrap(~name, scales = "free_y", ncol=1) +
theme_bw()
ls %>%
filter(climate=="hotdry", fecundity=="100", browsing=="1", size=="1", freq=="1",
species %in% common.species[[landscapename]]) %>%
ggplot(aes(x=year, y=dbh_avg_cm, color=species)) +
geom_line(linewidth=2) +
theme_bw()
db.conn <- dbConnect(RSQLite::SQLite(), paste0("../project2ndStudy/projectTest_stoko/database/stoko_change_dry_hot.sqlite"))
# mean basal area over time
(mean_line <- ls %>%
group_by(year, climate, rep, size, freq, fecundity, browsing) %>%
summarise(n = sum(basal_area_m2)) %>% ungroup() %>%
group_by(size, freq, climate, rep, year) %>%
summarise(mean = mean(n)) %>% ungroup() %>%
mutate(dist=paste(size, freq), distRate = as.numeric(as.character(size)) * as.numeric(as.character(freq))))
ls %>%
mutate(groups = paste("size:", size, ", freq:", freq, ", fecundity:", fecundity, ", browsing:", browsing)) %>%
group_by(groups, year, climate, rep, size, freq) %>%
summarise(n = sum(basal_area_m2)) %>% ungroup() %>%
ggplot(aes(x=year, y=n)) +
geom_line(aes(group=groups), show.legend = F, alpha=0.6) +
geom_line(data=mean_line, aes(y=mean, col=reorder(dist, distRate)), linewidth=2) +
geom_line(data =  dist.ls %>% group_by(year, climate) %>% summarise(n = sum(basal_area_m2)) %>% mutate(groups = "Disturbance modules"),
col="red", linetype = 2, linewidth=2) +
facet_grid(~climate) +
labs(x="Year", y="Mean basal area [mÂ²/ha]", col="Size and frequency modification",
title=paste0("How does process modfication impact basal area development in ", toupper(landscapename), "?\nDotted red line: simulation with disturbances simulated via modules instead of management\nColored lines: mean trajectory for the disturbance regime")) +
theme_bw()
png(paste0("results/figures/landscapeWide_basalArea_overTime_", landscapename, ".png"), res=200,
height=2000, width=4000)
ls %>%
mutate(groups = paste("size:", size, ", freq:", freq, ", fecundity:", fecundity, ", browsing:", browsing)) %>%
group_by(groups, year, climate, rep, size, freq) %>%
summarise(n = sum(basal_area_m2)) %>% ungroup() %>%
ggplot(aes(x=year, y=n)) +
geom_line(aes(group=groups), show.legend = F, alpha=0.6) +
geom_line(data=mean_line, aes(y=mean, col=reorder(dist, distRate)), linewidth=2) +
geom_line(data =  dist.ls %>% group_by(year, climate) %>% summarise(n = sum(basal_area_m2)) %>% mutate(groups = "Disturbance modules"),
col="red", linetype = 2, linewidth=2) +
facet_grid(~climate) +
labs(x="Year", y="Mean basal area [mÂ²/ha]", col="Size and frequency modification",
title=paste0("How does process modfication impact basal area development in ", toupper(landscapename), "?\nDotted red line: simulation with disturbances simulated via modules instead of management\nColored lines: mean trajectory for the disturbance regime")) +
theme_bw()
dev.off()
ls %>%
mutate(groups = paste("size:", size, ", freq:", freq, ", fecundity:", fecundity, ", browsing:", browsing)) %>%
filter(year == 80) %>%
group_by(groups, climate, rep, size, freq, fecundity, browsing) %>%
summarise(n = sum(basal_area_m2)) %>%
mutate(disturbanceRate = as.numeric(as.character(size)) * as.numeric(as.character(freq)),
level=paste0("x", disturbanceRate, "\nsize x ", size, "\nfreq x ", freq),
regen = paste(fecundity, browsing)) %>%
mutate(regen=factor(regen, levels=c("100 1", "100 2", "50 1", "50 2", "100 5", "20 1", "100 10",
"50 5", "20 2", "10 1", "50 10", "10 2", "20 5", "20 10", "10 5", "10 10"))) %>%
ggplot(aes(x=reorder(level, disturbanceRate), y=n, col=regen)) +
geom_point(size=4, col="black") +
geom_point(size=3) +
# geom_hline(aes(yintercept=dist.ls %>% filter(year==80, climate=="baseline") %>% pull(basal_area_m2) %>% unique() %>% sum()),
#            linetype=3, linewidth=2) +
geom_hline(aes(yintercept = ls %>% filter(year==0) %>% pull(basal_area_m2) %>% unique() %>% sum()),
col="black") +
facet_grid(~climate) +
labs(x="Disturbance rate modification", y="Mean basal area in 2100 [mÂ²/ha]",
col="Fecundity and browsing modification level",
title="Basal area in 2100: all 256 possible process modification combinations\nSolid line: value in 2020") +
theme_bw() +
theme(legend.position="bottom")
# final basal area
## stratified by disturbance
png(paste0("results/figures/landscapeWide_finalBasalArea_disturbances_", landscapename, ".png"), res=200,
height=1600, width=3400)
ls %>%
mutate(groups = paste("size:", size, ", freq:", freq, ", fecundity:", fecundity, ", browsing:", browsing)) %>%
filter(year == 80) %>%
group_by(groups, climate, rep, size, freq, fecundity, browsing) %>%
summarise(n = sum(basal_area_m2)) %>%
mutate(disturbanceRate = as.numeric(as.character(size)) * as.numeric(as.character(freq)),
level=paste0("x", disturbanceRate, "\nsize x ", size, "\nfreq x ", freq),
regen = paste(fecundity, browsing)) %>%
mutate(regen=factor(regen, levels=c("100 1", "100 2", "50 1", "50 2", "100 5", "20 1", "100 10",
"50 5", "20 2", "10 1", "50 10", "10 2", "20 5", "20 10", "10 5", "10 10"))) %>%
ggplot(aes(x=reorder(level, disturbanceRate), y=n, col=regen)) +
geom_point(size=4, col="black") +
geom_point(size=3) +
# geom_hline(aes(yintercept=dist.ls %>% filter(year==80, climate=="baseline") %>% pull(basal_area_m2) %>% unique() %>% sum()),
#            linetype=3, linewidth=2) +
geom_hline(aes(yintercept = ls %>% filter(year==0) %>% pull(basal_area_m2) %>% unique() %>% sum()),
col="black") +
facet_grid(~climate) +
labs(x="Disturbance rate modification", y="Mean basal area in 2100 [mÂ²/ha]",
col="Fecundity and browsing modification level",
title="Basal area in 2100: all 256 possible process modification combinations\nSolid line: value in 2020") +
theme_bw() +
theme(legend.position="bottom")
dev.off()
ls %>%
mutate(groups = paste("size:", size, ", freq:", freq, ", fecundity:", fecundity, ", browsing:", browsing)) %>%
filter(year == 80) %>%
group_by(groups, climate, rep, size, freq, fecundity, browsing) %>%
summarise(n = sum(basal_area_m2)) %>%
mutate(level=paste0("fecundity x ", as.numeric(as.character(fecundity))/100, "\nbrowsing x ", browsing),
regen=1/as.numeric(as.character(fecundity))*as.numeric(as.character(browsing)),
dist = paste(size, freq)) %>%
mutate(dist=factor(dist, levels=c("1 1", "1 2", "2 1", "2 2", "1 5", "5 1", "1 10", "10 1",
"2 5", "5 2", "10 2", "2 10", "5 5", "10 5", "5 10", "10 10"))) %>%
ggplot(aes(x=reorder(level, regen), y=n, col=dist)) +
geom_point(size=4, col="black") +
geom_point(size=3) +
geom_hline(aes(yintercept=dist.ls %>% filter(year==80, climate=="baseline") %>% pull(basal_area_m2) %>% unique() %>% sum()),
linetype=3, linewidth=2) +
geom_hline(aes(yintercept = ls %>% filter(year==0) %>% pull(basal_area_m2) %>% unique() %>% sum()),
col="black") +
facet_grid(~climate) +
labs(x="Disturbance rate modification", y="Mean basal area in 2100 [mÂ²/ha]",
col="Fecundity and browsing modification level",
title="Basal area in 2100: all 256 possible process modification combinations\nDotted line: value in 2100 with disturbance simulated via modules, baseline climate\nSolid line: value in 2020") +
theme_bw() +
theme(legend.position="bottom")
## stratified by regeneration
png(paste0("results/figures/landscapeWide_finalBasalArea_regeneration_", landscapename, ".png"), res=200,
height=1600, width=3400)
ls %>%
mutate(groups = paste("size:", size, ", freq:", freq, ", fecundity:", fecundity, ", browsing:", browsing)) %>%
filter(year == 80) %>%
group_by(groups, climate, rep, size, freq, fecundity, browsing) %>%
summarise(n = sum(basal_area_m2)) %>%
mutate(level=paste0("fecundity x ", as.numeric(as.character(fecundity))/100, "\nbrowsing x ", browsing),
regen=1/as.numeric(as.character(fecundity))*as.numeric(as.character(browsing)),
dist = paste(size, freq)) %>%
mutate(dist=factor(dist, levels=c("1 1", "1 2", "2 1", "2 2", "1 5", "5 1", "1 10", "10 1",
"2 5", "5 2", "10 2", "2 10", "5 5", "10 5", "5 10", "10 10"))) %>%
ggplot(aes(x=reorder(level, regen), y=n, col=dist)) +
geom_point(size=4, col="black") +
geom_point(size=3) +
geom_hline(aes(yintercept=dist.ls %>% filter(year==80, climate=="baseline") %>% pull(basal_area_m2) %>% unique() %>% sum()),
linetype=3, linewidth=2) +
geom_hline(aes(yintercept = ls %>% filter(year==0) %>% pull(basal_area_m2) %>% unique() %>% sum()),
col="black") +
facet_grid(~climate) +
labs(x="Disturbance rate modification", y="Mean basal area in 2100 [mÂ²/ha]",
col="Fecundity and browsing modification level",
title="Basal area in 2100: all 256 possible process modification combinations\nDotted line: value in 2100 with disturbance simulated via modules, baseline climate\nSolid line: value in 2020") +
theme_bw() +
theme(legend.position="bottom")
dev.off()
ls %>%
filter(year > 70) %>% # last simulation decade
mutate(distRate = as.numeric(size)*as.numeric(freq),
groups = paste("fecundity:", fecundity, "\nbrowsing:", browsing)) %>%
group_by(fecundity, browsing, distRate, climate, rep, size, freq) %>%
summarise(n = sum(basal_area_m2)/10) %>%
filter(distRate==1) %>%
ggplot() +
geom_line(aes(x=as.numeric(as.character(browsing)), y=n, col=as.factor(as.numeric(as.character(fecundity)))),
linewidth=2) +
geom_point(data =  dist.ls %>% filter(year > 70, climate=="baseline") %>% group_by(climate) %>% summarise(n = sum(basal_area_m2)/10),
aes(x=1, y=n), col="black", size=4, shape=8) +
facet_grid(~climate) +
labs(x="browsing modification", y="Mean basal area in last sim. decade [mÂ²/ha]", col="Fecundity modification [%]",
title=paste0("Modified regeneration: impact on basal area in ", toupper(landscapename), "\nDisturbance rate kept constant at original value\nBlack star: disturbances simulated via modules instead of management")) +
theme_bw()
# regeneration processes: final basal area
png(paste0("results/figures/landscapeWide_basalArea_regeneration_", landscapename, ".png"), res=200,
height=2000, width=3000)
ls %>%
filter(year > 70) %>% # last simulation decade
mutate(distRate = as.numeric(size)*as.numeric(freq),
groups = paste("fecundity:", fecundity, "\nbrowsing:", browsing)) %>%
group_by(fecundity, browsing, distRate, climate, rep, size, freq) %>%
summarise(n = sum(basal_area_m2)/10) %>%
filter(distRate==1) %>%
ggplot() +
geom_line(aes(x=as.numeric(as.character(browsing)), y=n, col=as.factor(as.numeric(as.character(fecundity)))),
linewidth=2) +
geom_point(data =  dist.ls %>% filter(year > 70, climate=="baseline") %>% group_by(climate) %>% summarise(n = sum(basal_area_m2)/10),
aes(x=1, y=n), col="black", size=4, shape=8) +
facet_grid(~climate) +
labs(x="browsing modification", y="Mean basal area in last sim. decade [mÂ²/ha]", col="Fecundity modification [%]",
title=paste0("Modified regeneration: impact on basal area in ", toupper(landscapename), "\nDisturbance rate kept constant at original value\nBlack star: disturbances simulated via modules instead of management")) +
theme_bw()
dev.off()
# dominant species
mean_line.species <- ls %>%
group_by(year, climate, rep, size, freq, fecundity, browsing) %>%
mutate(total = sum(basal_area_m2)) %>%
filter(species == common.species[[landscapename]][1]) %>%
summarise(n = basal_area_m2/total) %>%
group_by(size, freq, climate, rep, year) %>%
summarise(mean = mean(n)) %>% ungroup() %>%
mutate(dist=paste(size, freq), distRate = as.numeric(size) * as.numeric(freq))
ls %>%
mutate(groups = paste("size:", size, ", freq:", freq, ", fecundity:", fecundity, ", browsing:", browsing)) %>%
group_by(groups, year, climate, rep) %>%
mutate(total = sum(basal_area_m2)) %>%
filter(species == common.species[[landscapename]][1]) %>%
summarise(n = basal_area_m2/total) %>%
ggplot(aes(x=year, y=n*100)) +
geom_line(aes(group=groups), show.legend = F, alpha=0.6) +
geom_line(data=mean_line.species, aes(y=mean*100, col=reorder(dist, distRate)), linewidth=2) +
geom_line(data =  dist.ls %>% group_by(year, climate) %>%
mutate(total = sum(basal_area_m2)) %>%
filter(species == common.species[[landscapename]][1]) %>%
mutate(n = basal_area_m2/total),
col="red", linetype = 2, linewidth=2) +
facet_grid(~climate) +
labs(x="Year", y=paste0("Proportion of ", common.species[[landscapename]][1], " [%, basal area]"), col="",
title=paste0("How does the most common species fare in ", toupper(landscapename), "?\nDotted red line: simulation with disturbances simulated via modules instead of management\nColored lines: mean trajectory for the disturbance regime")) +
theme_bw()
png(paste0("results/figures/landscapeWide_mostCommonSpecies_overTime_", landscapename, ".png"), res=200,
height=2000, width=4000)
ls %>%
mutate(groups = paste("size:", size, ", freq:", freq, ", fecundity:", fecundity, ", browsing:", browsing)) %>%
group_by(groups, year, climate, rep) %>%
mutate(total = sum(basal_area_m2)) %>%
filter(species == common.species[[landscapename]][1]) %>%
summarise(n = basal_area_m2/total) %>%
ggplot(aes(x=year, y=n*100)) +
geom_line(aes(group=groups), show.legend = F, alpha=0.6) +
geom_line(data=mean_line.species, aes(y=mean*100, col=reorder(dist, distRate)), linewidth=2) +
geom_line(data =  dist.ls %>% group_by(year, climate) %>%
mutate(total = sum(basal_area_m2)) %>%
filter(species == common.species[[landscapename]][1]) %>%
mutate(n = basal_area_m2/total),
col="red", linetype = 2, linewidth=2) +
facet_grid(~climate) +
labs(x="Year", y=paste0("Proportion of ", common.species[[landscapename]][1], " [%, basal area]"), col="",
title=paste0("How does the most common species fare in ", toupper(landscapename), "?\nDotted red line: simulation with disturbances simulated via modules instead of management\nColored lines: mean trajectory for the disturbance regime")) +
theme_bw()
dev.off()
# species composition: size x 10, freq x 10
label.df <- data.frame(year=15, basal_area_m2=0.25, label=c("Reference conditions", "Most extreme scenario"),
groups=c("size: 1 , freq: 1 , fecundity: 100 , browsing: 1",
"size: 10 , freq: 10 , fecundity: 10 , browsing: 10"),
climate="baseline")
ls %>%
filter(identifier %in% c("baseline_rep1_size1_freq1_browsing1_fecundity100", "baseline_rep1_size10_freq10_browsing10_fecundity10",
"hotdry_rep1_size1_freq1_browsing1_fecundity100", "hotdry_rep1_size10_freq10_browsing10_fecundity10")) %>%
mutate(species = ifelse(species %in% common.species[[landscapename]], species, "other"),
groups = paste("size:", size, ", freq:", freq, ", fecundity:", fecundity, ", browsing:", browsing)) %>%
ggplot(aes(x=year, y=basal_area_m2)) +
geom_bar(aes(fill=species), stat="identity", position=position_fill(), width=1.1) +
geom_label(data=label.df, aes(label=label)) +
facet_grid(groups~climate) +
labs(x="Year", fill="Species", y="Proportion of basal area") +
theme_bw()
png(paste0("results/figures/landscapeWide_speciesComposition_relative_extremes_", landscapename, ".png"), res=200,
height=2000, width=3000)
ls %>%
filter(identifier %in% c("baseline_rep1_size1_freq1_browsing1_fecundity100", "baseline_rep1_size10_freq10_browsing10_fecundity10",
"hotdry_rep1_size1_freq1_browsing1_fecundity100", "hotdry_rep1_size10_freq10_browsing10_fecundity10")) %>%
mutate(species = ifelse(species %in% common.species[[landscapename]], species, "other"),
groups = paste("size:", size, ", freq:", freq, ", fecundity:", fecundity, ", browsing:", browsing)) %>%
ggplot(aes(x=year, y=basal_area_m2)) +
geom_bar(aes(fill=species), stat="identity", position=position_fill(), width=1.1) +
geom_label(data=label.df, aes(label=label)) +
facet_grid(groups~climate) +
labs(x="Year", fill="Species", y="Proportion of basal area") +
theme_bw()
dev.off()
ls %>%
filter(identifier %in% c("baseline_rep1_size1_freq1_browsing1_fecundity100", "baseline_rep1_size10_freq10_browsing10_fecundity10",
"hotdry_rep1_size1_freq1_browsing1_fecundity100", "hotdry_rep1_size10_freq10_browsing10_fecundity10")) %>%
mutate(species = ifelse(species %in% common.species[[landscapename]], species, "other"),
groups = paste("size:", size, ", freq:", freq, ", fecundity:", fecundity, ", browsing:", browsing)) %>%
ggplot(aes(x=year, y=basal_area_m2)) +
geom_bar(aes(fill=species), stat="identity", width=1.1) +
facet_grid(groups~climate) +
labs(x="Year", fill="Species", y="Mean basal area [mÂ²/ha]") +
theme_bw()
# absolute
png(paste0("results/figures/landscapeWide_speciesComposition_absolute_extremes_", landscapename, ".png"), res=200,
height=2000, width=3000)
ls %>%
filter(identifier %in% c("baseline_rep1_size1_freq1_browsing1_fecundity100", "baseline_rep1_size10_freq10_browsing10_fecundity10",
"hotdry_rep1_size1_freq1_browsing1_fecundity100", "hotdry_rep1_size10_freq10_browsing10_fecundity10")) %>%
mutate(species = ifelse(species %in% common.species[[landscapename]], species, "other"),
groups = paste("size:", size, ", freq:", freq, ", fecundity:", fecundity, ", browsing:", browsing)) %>%
ggplot(aes(x=year, y=basal_area_m2)) +
geom_bar(aes(fill=species), stat="identity", width=1.1) +
facet_grid(groups~climate) +
labs(x="Year", fill="Species", y="Mean basal area [mÂ²/ha]") +
theme_bw()
dev.off()
mean_line.rem <- rem %>%
group_by(year, climate, rep, size, freq, fecundity, browsing) %>%
summarise(n = sum(basal_area_m2)) %>%
group_by(size, freq, climate, rep, year) %>%
summarise(mean = mean(n)) %>% ungroup() %>%
mutate(dist=paste(size, freq), distRate = as.numeric(size) * as.numeric(freq))
rem %>%
mutate(groups = paste("size:", size, ", freq:", freq, ", fecundity:", fecundity, ", browsing:", browsing)) %>%
group_by(groups, year, climate, rep) %>%
summarise(n = sum(basal_area_m2)) %>%
ggplot(aes(x=year, y=n)) +
# geom_line(aes(group=groups), show.legend = F, alpha=0.6) +
geom_line(data=mean_line.rem, aes(y=mean, col=reorder(dist, distRate)), linewidth=2) +
geom_line(data =  dist %>% filter(climate=="baseline") %>% group_by(year, climate) %>% summarise(n = sum(basal_area_m2)) %>% mutate(groups = "Disturbance modules"),
col="black", linewidth=2) +
scale_y_log10() +
facet_grid(~climate) +
labs(x="Year", y="Basal area killed by disturbance [mÂ²]", col="",
title=paste0("How does process modfication impact tree mortality in ", toupper(landscapename), "?\nBlack line: simulation with disturbances simulated via modules instead of management\nY-axis log10-transformed")) +
theme_bw()
png(paste0("results/figures/landscapeWide_treesKilled_", landscapename, ".png"), res=200,
height=2000, width=3000)
rem %>%
mutate(groups = paste("size:", size, ", freq:", freq, ", fecundity:", fecundity, ", browsing:", browsing)) %>%
group_by(groups, year, climate, rep) %>%
summarise(n = sum(basal_area_m2)) %>%
ggplot(aes(x=year, y=n)) +
# geom_line(aes(group=groups), show.legend = F, alpha=0.6) +
geom_line(data=mean_line.rem, aes(y=mean, col=reorder(dist, distRate)), linewidth=2) +
geom_line(data =  dist %>% filter(climate=="baseline") %>% group_by(year, climate) %>% summarise(n = sum(basal_area_m2)) %>% mutate(groups = "Disturbance modules"),
col="black", linewidth=2) +
scale_y_log10() +
facet_grid(~climate) +
labs(x="Year", y="Basal area killed by disturbance [mÂ²]", col="",
title=paste0("How does process modfication impact tree mortality in ", toupper(landscapename), "?\nBlack line: simulation with disturbances simulated via modules instead of management\nY-axis log10-transformed")) +
theme_bw()
dev.off()
rem %>% filter(climate=="baseline") %>% pull(basal_area_m2) %>% summary()
rem %>% filter(climate=="hotdry") %>% pull(basal_area_m2) %>% summary()
rem %>% group_by(climate) %>% summarise(sum_basal = sum(basal_area_m2))
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
## patch output ####
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
ref.df <- read_csv("helper_files/ref.df.csv")
i<-1; patch.df <- data.frame()
for (i in 1:nrow(sims)) {
dbname <- paste0("../project2ndStudy/projectTest_", landscapename, "/output/patch_output/output_patches_",
landscapename, "_", sims$climate[i], "_rep", sims$rep[i], "_size", sims$sizeMods[i],
"_freq", sims$freqMods[i], "_browsing", sims$browsingMods[i], "_fecundity", sims$fecundityMods[i], ".csv")
if (file.exists(dbname)) {
patch.df <- bind_rows(patch.df,
read_delim(dbname) %>%
mutate(landscape=landscapename,
climate=sims$climate[i], rep=sims$rep[i], size=sims$sizeMods[i], freq=sims$freqMods[i],
browsing=sims$browsingMods[i], fecundity=sims$fecundityMods[i],
n_cells = ifelse(killed_ba == 0, 0, n_cells)) %>%
filter(n_cells > 0)
)
}
#if (i%%16==0) print(paste0(round((i/nrow(sims)*100),1), " %: ", dbname))
}; write_csv(patch.df, paste0("results/datasets/patch.df_", landscapename, ".csv"))
patch.df %>%
group_by(landscape, climate, rep, size, freq, browsing, fecundity, agent) %>%
summarise(size_actual = mean(n_cells),
events_actual = n()) %>%
full_join(ref.df[ref.df$landscape==landscapename,]) %>%
mutate(size_expected = size_expected * mean(as.numeric(size)),
events_expected = events_expected * mean(as.numeric(freq)),
area_expected = size_expected * events_expected/100,
area_actual = size_actual * events_actual/100,
area_diff = (area_actual-area_expected)/area_expected) %>%
summary()
