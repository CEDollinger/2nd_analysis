groups = paste("fecundity:", fecundity, "\nbrowsing:", browsing)) %>%
group_by(fecundity, browsing, distRate, climate, rep, size, freq) %>%
summarise(n = sum(basal_area_m2)/10) %>%
filter(distRate==1) %>%
ggplot() +
geom_line(aes(x=as.numeric(as.character(browsing)), y=n, col=as.factor(as.numeric(as.character(fecundity)))),
linewidth=2) +
geom_point(data =  dist.ls %>% filter(year > 70) %>% group_by(climate) %>%  summarise(n = sum(basal_area_m2)/10),
aes(x=1, y=n), col="black", size=4, shape=8) +
facet_grid(~climate) +
labs(x="browsing modification", y="Mean basal area in last sim. decade [mÂ²/ha]", col="Fecundity modification [%]",
title="Modified regeneration: impact on basal area in BGNP\nDisturbance rate kept constant at original value\nBlack star: disturbances simulated via modules instead of management") +
theme_bw()
dev.off()
ls %>%
filter(size == 10, freq == 10) %>%
mutate(groups = paste("size:", size, ", freq:", freq, ", fecundity:", fecundity, ", browsing:", browsing)) %>%
mutate(species = ifelse(species %in% c("fasy", "piab", "abal", "lade", "acps"), species, "other")) %>%
ggplot(aes(x=year, y=basal_area_m2, fill=species)) +
geom_bar(stat="identity", position=position_fill()) +
facet_wrap(climate~groups) +
theme_bw()
ls %>%
filter(size == 10, freq == 10, browsing %in% c(1,10)) %>%
mutate(groups = paste("size:", size, ", freq:", freq, ", fecundity:", fecundity, ", browsing:", browsing)) %>%
mutate(species = ifelse(species %in% c("fasy", "piab", "abal", "lade", "acps"), species, "other")) %>%
ggplot(aes(x=year, y=basal_area_m2, fill=species)) +
geom_bar(stat="identity", position=position_fill()) +
facet_wrap(climate~groups) +
theme_bw()
ls %>%
filter(size == 10, freq == 10, browsing %in% c(1,10), fecundity %in% c(100,10)) %>%
mutate(groups = paste("size:", size, ", freq:", freq, ", fecundity:", fecundity, ", browsing:", browsing)) %>%
mutate(species = ifelse(species %in% c("fasy", "piab", "abal", "lade", "acps"), species, "other")) %>%
ggplot(aes(x=year, y=basal_area_m2, fill=species)) +
geom_bar(stat="identity", position=position_fill()) +
facet_wrap(climate~groups) +
theme_bw()
ls %>%
filter(size == 10, freq == 10, browsing %in% c(1,10), fecundity %in% c(100,10)) %>%
mutate(groups = paste("size:", size, ", freq:", freq, ", fecundity:", fecundity, ", browsing:", browsing)) %>%
mutate(species = ifelse(species %in% c("fasy", "piab", "abal", "lade", "acps"), species, "other")) %>%
ggplot(aes(x=year, y=basal_area_m2, fill=species)) +
geom_bar(stat="identity", position=position_fill()) +
facet_grid(climate~groups) +
theme_bw()
ls %>%
filter(size == 10, freq == 10, browsing %in% c(1,10), fecundity %in% c(100,10)) %>%
mutate(fecundity=factor(fecundity, levels=c("100", "10"))) %>%
mutate(groups = paste("size:", size, ", freq:", freq, ", fecundity:", fecundity, ", browsing:", browsing)) %>%
mutate(species = ifelse(species %in% c("fasy", "piab", "abal", "lade", "acps"), species, "other")) %>%
ggplot(aes(x=year, y=basal_area_m2, fill=species)) +
geom_bar(stat="identity", position=position_fill()) +
facet_grid(climate~groups) +
theme_bw()
ls %>%
filter(size == 10, freq == 10, browsing %in% c(1,10), fecundity %in% c(100,10)) %>%
mutate(species = ifelse(species %in% c("fasy", "piab", "abal", "lade", "acps"), species, "other")) %>%
ggplot(aes(x=year, y=basal_area_m2, fill=species)) +
geom_bar(stat="identity", position=position_fill()) +
facet_grid(climate~identifier) +
theme_bw()
ls %>%
filter(size == 10, freq == 10, browsing %in% c(1,10), fecundity %in% c(100,10)) %>%
mutate(species = ifelse(species %in% c("fasy", "piab", "abal", "lade", "acps"), species, "other")) %>%
ggplot(aes(x=year, y=basal_area_m2, fill=species)) +
geom_bar(stat="identity", position=position_fill()) +
facet_grid(identifier~climate) +
theme_bw()
ls %>%
filter(size == 10, freq == 10, browsing == c(10), fecundity %in% c(10)) %>%
mutate(species = ifelse(species %in% c("fasy", "piab", "abal", "lade", "acps"), species, "other")) %>%
ggplot(aes(x=year, y=basal_area_m2, fill=species)) +
geom_bar(stat="identity", position=position_fill()) +
facet_grid(identifier~climate) +
theme_bw()
# species composition: size x 10, freq x 10
png(paste0("plots/4_speciesComposition_relative_10x10_landscape_", landscapename, ".png"), res=200,
height=2000, width=3000)
ls %>%
filter(size == 10, freq == 10, browsing == c(10), fecundity %in% c(10)) %>%
mutate(species = ifelse(species %in% c("fasy", "piab", "abal", "lade", "acps"), species, "other")) %>%
ggplot(aes(x=year, y=basal_area_m2, fill=species)) +
geom_bar(stat="identity", position=position_fill()) +
facet_grid(identifier~climate) +
theme_bw()
dev.off()
# species composition: size x 10, freq x 10
png(paste0("results/figures/landscapeWide_speciesComposition_relative_10x10_", landscapename, ".png"), res=200,
height=2000, width=3000)
ls %>%
filter(size == 10, freq == 10, browsing == c(10), fecundity %in% c(10)) %>%
mutate(species = ifelse(species %in% c("fasy", "piab", "abal", "lade", "acps"), species, "other")) %>%
ggplot(aes(x=year, y=basal_area_m2, fill=species)) +
geom_bar(stat="identity", position=position_fill()) +
facet_grid(identifier~climate) +
theme_bw()
dev.off()
dev.off()
# species composition: size x 10, freq x 10
png(paste0("results/figures/landscapeWide_speciesComposition_relative_10x10_", landscapename, ".png"), res=200,
height=2000, width=3000)
ls %>%
filter(size == 10, freq == 10, browsing == c(10), fecundity %in% c(10)) %>%
mutate(species = ifelse(species %in% c("fasy", "piab", "abal", "lade", "acps"), species, "other")) %>%
ggplot(aes(x=year, y=basal_area_m2, fill=species)) +
geom_bar(stat="identity", position=position_fill()) +
facet_grid(identifier~climate) +
theme_bw()
dev.off()
library(RSQLite); library(dbplyr)
library(tidyverse)
library(ggpubr)
library(RSQLite); library(dbplyr)
library(terra)
library(beepr)
"%ni%" <- Negate("%in%")
setwd(dirname(rstudioapi::getActiveDocumentContext()$path)); getwd() # set wd to file location
landscapes <- c("bgd", "grte", "stoko")
# set up ####
# Most common species ###
(common.bgd <- dbConnect(RSQLite::SQLite(), paste0("../project2ndStudy/projectTest_bgd/output/output_bgd_baseline_rep1_size1_freq1_browsing1_fecundity100.sqlite")) %>%
tbl(., "landscape") %>% collect() %>%
group_by(species) %>% summarise(a=mean(basal_area_m2)) %>% arrange(desc(a)) %>% slice(1:8) %>% pull(species))
# always the same 8 most common species!
(common.grte <- dbConnect(RSQLite::SQLite(), paste0("../project2ndStudy/projectTest_grte/output/output_grte_baseline_rep1_size1_freq1_browsing1_fecundity100.sqlite")) %>%
tbl(., "landscape") %>% collect() %>%
group_by(species) %>% summarise(a=mean(basal_area_m2)) %>% arrange(desc(a)) %>% slice(1:8) %>% pull(species))
# always the same 8 most common species!
(common.stoko <- dbConnect(RSQLite::SQLite(), paste0("../project2ndStudy/projectTest_stoko/output/output_stoko_baseline_rep1_size1_freq1_browsing1_fecundity100.sqlite")) %>%
tbl(., "landscape") %>% collect() %>%
group_by(species) %>% summarise(a=mean(basal_area_m2)) %>% arrange(desc(a)) %>% slice(1:8) %>%
pull(species))
# always the same 5 (and 8) most common species!
common.species <- list(common.bgd, common.grte, common.stoko); names(common.species) <- landscapes; rm(common.bgd, common.grte, common.stoko)
helpers <- list(list(), list(), list(), tibble(), tibble()); names(helpers) <- c("ru", "stand", "elev", "species", "env")
helper.files <- list(helpers, helpers, helpers); names(helper.files) <- landscapes; rm(helpers)
helper.files[["bgd"]][["ru"]] <- rast("../project2ndStudy/projectTest_bgd/gis/objectid.asc")
helper.files[["bgd"]][["stand"]] <- rast("../project2ndStudy/projectTest_bgd/gis/standgrid.asc")
helper.files[["bgd"]][["elev"]] <- rast("../project2ndStudy/projectTest_bgd/gis/dem100_rid.asc") %>%
resample(., helper.files[["bgd"]][["ru"]])
helper.files[["bgd"]][["species"]] <- dbConnect(RSQLite::SQLite(),  dbname = "../project2ndStudy/projectTest_bgd/database/species_bgd.sqlite") %>%
tbl(., "species") %>% collect() %>% select(shortName, lightResponseClass, isConiferous, sapHDSapling, psiMin) %>%
rename(species = shortName) %>% mutate(lightResponseClass = as.numeric(lightResponseClass)) %>%
mutate(species.code = as.numeric(as.factor(species))) %>%
mutate(species.code = ifelse(species %in% common.species[["bgd"]], species.code, 0))
helper.files[["bgd"]][["env"]] <- read_delim("../project2ndStudy/projectTest_bgd/gis/environment.txt")
helper.files[["grte"]][["ru"]] <- rast("../project2ndStudy/projectTest_grte/gis/landscape_env_grid.txt")
helper.files[["grte"]][["stand"]] <- rast("../project2ndStudy/projectTest_grte/gis/landscape_stand_grid.txt")
helper.files[["grte"]][["elev"]] <- rast("../project2ndStudy/projectTest_grte/gis/landscape_DEM.txt") %>%
resample(., helper.files[["grte"]][["ru"]])
helper.files[["grte"]][["species"]] <- dbConnect(RSQLite::SQLite(),  dbname = "../project2ndStudy/projectTest_grte/database/species_grte.sqlite") %>%
tbl(., "species") %>% collect() %>% select(shortName, lightResponseClass, isConiferous, sapHDSapling, psiMin) %>%
rename(species = shortName) %>% mutate(lightResponseClass = as.numeric(lightResponseClass)) %>%
mutate(species.code = as.numeric(as.factor(species))) %>%
filter(species %ni% c("Potr_backup", "Pial_backup_org", "Pico_backup")) %>%
mutate(species.code = ifelse(species %in% common.species$grte, species.code, 0))
helper.files[["grte"]][["env"]] <- read_delim("../project2ndStudy/projectTest_grte/gis/environment_file_cluster_kbdi_downscaledclimate.txt")
helper.files[["stoko"]][["ru"]] <- rast("../project2ndStudy/projectTest_stoko/gis/resourceUnit_snp_220908.asc")
helper.files[["stoko"]][["stand"]] <- rast("../project2ndStudy/projectTest_stoko/gis/standgrid_speed.asc")
helper.files[["stoko"]][["elev"]] <- rast("../project2ndStudy/projectTest_stoko/gis/jpn_elv_clipClim_JGD2000Zone13_res100m_cropped.asc") %>%
resample(., helper.files[["stoko"]][["ru"]])
helper.files[["stoko"]][["species"]] <- dbConnect(RSQLite::SQLite(),  dbname = "../project2ndStudy/projectTest_stoko/database/species_stoko.sqlite") %>%
tbl(., "speciesParameters") %>% collect() %>% select(shortName, lightResponseClass, isConiferous, sapHDSapling, psiMin) %>%
rename(species = shortName) %>% mutate(lightResponseClass = as.numeric(lightResponseClass)) %>%
mutate(species.code = as.numeric(as.factor(species))) %>%
mutate(species.code = ifelse(species %in% common.species$stoko, species.code, 0))
helper.files[["stoko"]][["env"]] <- read_delim("../project2ndStudy/projectTest_stoko/gis/environment_final.txt")
rid.df <- data.frame()
for (landscape in 1:3) {
rid_i <-helper.files[[landscapes[landscape]]][["ru"]] %>%
terra::as.data.frame(., xy=T) %>% rename(rid=3) %>%
drop_na() %>% mutate(landscape = landscapes[landscape])
rid.df <- bind_rows(rid.df, rid_i);rm(rid_i)
}
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
landscapename <- "bgd"
# all possible simulation runs (for now)
sims <- expand_grid(climate=c("baseline", "hotdry"), rep=c("1"),
sizeMods=c("1", "2", "5", "10"), freqMods=c("1", "2", "5", "10"),
browsingMods=c("1", "2", "5", "10"), fecundityMods= c("100", "50", "20", "10")); sims$dbname <-
paste0("output_", landscapename, "_", sims$climate, "_rep", sims$rep, "_size", sims$sizeMods,
"_freq", sims$freqMods, "_browsing", sims$browsingMods, "_fecundity", sims$fecundityMods, ".sqlite"); sims
# read in landscape and landscape_removed output
rem <- data.frame(); ls <- data.frame(); ds <- data.frame(); i<-1
for (i in 1:nrow(sims)) {
dbname <- paste0("../project2ndStudy/projectTest_", landscapename, "/output/", sims$dbname[i])
if (file.exists(dbname)) {
db.conn <- dbConnect(RSQLite::SQLite(),
dbname = dbname) # output_baseline_rep1_size1_freq1_browsing1_fecundity75
ls.i <- tbl(db.conn, "landscape") %>%
dplyr::select(year, species, count_ha, basal_area_m2, gwl_m3, volume_m3, height_avg_m) %>%
collect() %>%
mutate(climate = sims$climate[i], rep = sims$rep[i], size = sims$sizeMods[i], freq = sims$freqMods[i],
browsing = sims$browsingMods[i], fecundity = sims$fecundityMods[i],
identifier = paste0(sims$climate[i], "_rep", sims$rep[i], "_size", sims$sizeMods[i], "_freq", sims$freqMods[i],
"_browsing", sims$browsingMods[i], "_fecundity", sims$fecundityMods[i])) %>%
mutate(size = factor(size, levels = rev(c("10", "5", "2", "1"))),
freq = factor(freq, levels = rev(c("10", "5", "2", "1"))),
fecundity = factor(fecundity, levels = c("100", "50", "20", "10")),
browsing = factor(browsing, levels = rev(c("10", "5", "2", "1"))),
landscape = landscapename)
rem.i <- tbl(db.conn, "landscape_removed") %>%
dplyr::select(year, species, count, basal_area_m2, volume_m3, dbh_class, reason) %>%
collect() %>%
mutate(climate = sims$climate[i], rep = sims$rep[i], size = sims$sizeMods[i], freq = sims$freqMods[i],
browsing = sims$browsingMods[i], fecundity = sims$fecundityMods[i],
identifier = paste0(sims$climate[i], "_rep", sims$rep[i], "_size", sims$sizeMods[i], "_freq", sims$freqMods[i],
"_browsing", sims$browsingMods[i], "_fecundity", sims$fecundityMods[i])) %>%
mutate(size = factor(size, levels = rev(c("10", "5", "2", "1"))),
freq = factor(freq, levels = rev(c("10", "5", "2", "1"))),
fecundity = factor(fecundity, levels = c("100", "50", "20", "10")),
browsing = factor(browsing, levels = rev(c("10", "5", "2", "1"))),
landscape = landscapename)
ds.i <- tbl(db.conn, "dynamicstand") %>%
dplyr::select(-ru) %>%
collect() %>%
rename(basal_area_m2 = basalarea_sum, count_ha = if_height_0_1_0_sum) %>%
mutate(climate = sims$climate[i], rep = sims$rep[i], size = sims$sizeMods[i], freq = sims$freqMods[i],
browsing = sims$browsingMods[i], fecundity = sims$fecundityMods[i],
identifier = paste0(sims$climate[i], "_rep", sims$rep[i], "_size", sims$sizeMods[i], "_freq", sims$freqMods[i],
"_browsing", sims$browsingMods[i], "_fecundity", sims$fecundityMods[i])) %>%
mutate(size = factor(size, levels = rev(c("10", "5", "2", "1"))),
freq = factor(freq, levels = rev(c("10", "5", "2", "1"))),
fecundity = factor(fecundity, levels = c("100", "50", "20", "10")),
browsing = factor(browsing, levels = rev(c("10", "5", "2", "1"))),
landscape = landscapename)
dbDisconnect(db.conn)
rem <- bind_rows(rem, rem.i); ls <- bind_rows(ls, ls.i); ds <- bind_rows(ds, ds.i)
rm(db.conn, rem.i, ls.i, ds.i)
}
if (i%%10==0) print(i)
}
ls <- readRDS(paste0("results/datasets/ls_", landscapename, "_raw.RDATA"))
ds <- readRDS(paste0("results/datasets/ds_", landscapename, "_raw.RDATA"))
rem <- readRDS(paste0("results/datasets/rem_", landscapename, "_raw.RDATA"))
ds.ls <- readRDS(paste0("results/datasets/ds.ls_", landscapename, ".RDATA"))
View(ds.ls)
ds.ls <- list(tibble(), tibble(), tibble()); names(ds.ls) <- c("basal", "dom", "forest")
# prop of basal area decreased by more than 50 %
ds.ls[["basal"]] <- ds %>%
group_by(rid, climate, rep, size, freq, browsing, fecundity, identifier, landscape, year) %>%
summarise(basal_c = sum(basal_area_m2)) %>% ungroup() %>% # basal area sum in 2020, 2050, 2100
left_join(ds %>%
filter(identifier == "baseline_rep1_size1_freq1_browsing1_fecundity100") %>%
group_by(rid, climate, rep, size, freq, browsing, fecundity, identifier, landscape, year) %>%
summarise(basal_ref = sum(basal_area_m2)) %>% ungroup() %>% # basal area sum in 2020, 2050, 2100 under reference conditions
dplyr::select(rid, basal_ref, year),
multiple = "all") %>% #summary()
filter(!is.na(basal_ref)) %>% # filter out RUs for which no reference conditions exist
group_by(climate, rep, size, freq, browsing, fecundity, identifier, landscape, year) %>%
mutate(basal_diff = (basal_c-basal_ref)/basal_ref, # relative change in basal area sum
threshold = ifelse(basal_diff < -0.5, "below", "above"), # count RUs where basal area dropped by more than 50% from reference; unidirectional: only if DECREASE > 50%
n_rid = length(unique(rid))) %>% ungroup()
# prop of dominant species changed
ds.ls[["dom"]] <- ds %>%
group_by(rid, climate, rep, size, freq, browsing, fecundity, identifier, landscape, year) %>%
filter(basal_area_m2 == max(basal_area_m2)) %>% ungroup() %>% # species with max basal area in 2020, 2050, 2100
rename(dom_c = species) %>%
dplyr::select(rid, climate, rep, size, freq, browsing, fecundity, identifier, landscape, dom_c, year) %>%
full_join(ds %>%
filter(identifier == "baseline_rep1_size1_freq1_browsing1_fecundity100") %>%
group_by(rid, climate, rep, size, freq, browsing, fecundity, identifier, landscape, year) %>%
filter(basal_area_m2 == max(basal_area_m2)) %>% ungroup() %>% # species with max basal area in 2020, 2050, 2100 under reference conditions
rename(dom_ref = species) %>%
dplyr::select(rid, dom_ref, year),
multiple = "all") %>% #summary()
filter(!is.na(dom_ref)) %>% # filter out RUs for which no reference conditions exist
group_by(climate, rep, size, freq, browsing, fecundity, identifier, landscape, year) %>%
mutate(threshold = ifelse(dom_c == dom_ref, "same", "different"), # count RUs where dominant species changed
n_rid = length(unique(rid))) %>% ungroup()
# prop of trees count > 50
ds.ls[["forest"]] <- ds %>%
group_by(rid, climate, rep, size, freq, browsing, fecundity, identifier, landscape, year) %>%
summarise(count_sum_c = sum(count_ha)) %>% ungroup() %>% # tree count sum in 2020, 2050, 2100
full_join(ds %>%
filter(identifier == "baseline_rep1_size1_freq1_browsing1_fecundity100") %>%
group_by(rid, climate, rep, size, freq, browsing, fecundity, identifier, landscape, year) %>%
summarise(count_sum_ref = sum(count_ha)) %>% ungroup() %>% # tree count sum in 2020, 2050, 2100 under reference conditions
dplyr::select(rid, count_sum_ref, year),
multiple = "all") %>%
filter(!is.na(count_sum_ref)) %>% # filter out RUs for which no reference conditions exist
group_by(climate, rep, size, freq, browsing, fecundity, identifier, landscape, year) %>%
mutate(threshold = as.factor(ifelse(count_sum_c < 50 & count_sum_ref >= 50, "non-forest", "forest")), # count RUs where tree count dropped below 50 (and reference value is also higher than 50)
n_rid = length(unique(rid))) %>% ungroup()
saveRDS(ds.ls, paste0("results/datasets/ds.ls_", landscapename, ".RDATA"))
beep(0)
vars <- c("size", "freq", "fecundity", "browsing")
# over time
overTime <- ds.ls[["basal"]] %>%
group_by(threshold, climate, rep, size, freq, browsing, fecundity, identifier, landscape, year) %>%
summarise(prop = mean(sum(n())/n_rid)) %>% # convert from count to proportion
filter(threshold == "above") %>% # only keep proportion of unchanged landscape
ungroup() %>% rename('1. Structure: basal area decreased by >50 % from reference' = prop) %>% dplyr::select(-threshold) %>%
full_join(ds.ls[["dom"]] %>%
group_by(threshold, climate, rep, size, freq, browsing, fecundity, identifier, landscape, year) %>%
summarise(prop = mean(sum(n())/n_rid)) %>% # convert from count to proportion
filter(threshold == "same") %>% # only keep proportion of unchanged landscape
ungroup() %>% rename('2. Composition: dominant species changed from reference' = prop) %>% dplyr::select(-threshold)) %>%
full_join(ds.ls[["forest"]] %>% # summary()
group_by(threshold, climate, rep, size, freq, browsing, fecundity, identifier, landscape, year) %>%
summarise(prop = mean(sum(n())/n_rid)) %>% # convert from count to proportion
filter(threshold == "forest") %>% # only keep proportion of unchanged landscape
ungroup() %>% rename('3. Remaining forest: stem density dropping below 50 trees/ha' = prop) %>% dplyr::select(-threshold))
overTime %>% #summary()
filter(identifier == "baseline_rep1_size1_freq1_browsing1_fecundity100") # test: props should always be 1
overTime %>%
pivot_longer(cols=10:12) %>%
ggplot(aes(x=year+2020, y=value*100, group=identifier, col=climate)) +
geom_line(linewidth=0.5) +
facet_wrap(~name, ncol=1) +
labs(x="Year", y="Proportion of unchanged landscape [%]", col="Climate scenario") +
theme_bw()
# trees killed
mean_line.rem <- rem %>%
group_by(year, climate, rep, size, freq, fecundity, browsing) %>%
summarise(n = sum(basal_area_m2)) %>%
group_by(size, freq, climate, rep, year) %>%
summarise(mean = mean(n)) %>% ungroup() %>%
mutate(dist=paste(size, freq), distRate = as.numeric(size) * as.numeric(freq))
rem %>%
mutate(groups = paste("size:", size, ", freq:", freq, ", fecundity:", fecundity, ", browsing:", browsing)) %>%
group_by(groups, year, climate, rep) %>%
summarise(n = sum(basal_area_m2)) %>%
ggplot(aes(x=year, y=n)) +
# geom_line(aes(group=groups), show.legend = F, alpha=0.6) +
geom_line(data=mean_line.rem, aes(y=mean, col=reorder(dist, distRate)), linewidth=2) +
geom_line(data =  dist %>% group_by(year, climate) %>% summarise(n = sum(basal_area_m2)) %>% mutate(groups = "Disturbance modules"),
col="black", linewidth=2) +
scale_y_log10() +
facet_grid(~climate) +
labs(x="Year", y="Trees killed by disturbance", col="",
title="How does process modfication impact tree mortality in BGNP?\nBlack line: simulation with disturbances simulated via modules instead of management\nY-axis log10-transformed") +
theme_bw()
rem %>%
mutate(groups = paste("size:", size, ", freq:", freq, ", fecundity:", fecundity, ", browsing:", browsing)) %>%
group_by(groups, year, climate, rep)
rem %>%
mutate(groups = paste("size:", size, ", freq:", freq, ", fecundity:", fecundity, ", browsing:", browsing)) %>%
group_by(groups, year, climate, rep) %>%
summarise(n = sum(basal_area_m2))
rem %>%
mutate(groups = paste("size:", size, ", freq:", freq, ", fecundity:", fecundity, ", browsing:", browsing)) %>%
group_by(groups, year, climate, rep) %>%
summarise(n = sum(basal_area_m2)) %>%
ggplot(aes(x=year, y=n)) +
# geom_line(aes(group=groups), show.legend = F, alpha=0.6) +
geom_line(data=mean_line.rem, aes(y=mean, col=reorder(dist, distRate)), linewidth=2)
rem %>%
mutate(groups = paste("size:", size, ", freq:", freq, ", fecundity:", fecundity, ", browsing:", browsing)) %>%
group_by(groups, year, climate, rep) %>%
summarise(n = sum(basal_area_m2)) %>%
ggplot(aes(x=year, y=n)) +
# geom_line(aes(group=groups), show.legend = F, alpha=0.6) +
geom_line(data=mean_line.rem, aes(y=mean, col=reorder(dist, distRate)), linewidth=2) +
geom_line(data =  dist %>% group_by(year, climate) %>% summarise(n = sum(basal_area_m2)) %>% mutate(groups = "Disturbance modules"),
col="black", linewidth=2)
dist %>% group_by(year, climate)
# runs with disturbance modules
# baseline climate
db.conn <- dbConnect(RSQLite::SQLite(), paste0("../project2ndStudy/projectTest_", landscapename,"/output/",landscapename, "_baseline_disturbanceModulesEnabled.sqlite"))
dist1 <- tbl(db.conn, "landscape_removed") %>%
collect() %>%
mutate(climate = "baseline")
dist.ls1 <- tbl(db.conn, "landscape") %>%
collect() %>%
mutate(climate = "baseline")
dist.ds1 <- tbl(db.conn, "dynamicstand") %>%
collect() %>%
mutate(climate = "baseline")
dbDisconnect(db.conn); rm(db.conn)
# hotdry climate
db.conn <- dbConnect(RSQLite::SQLite(), paste0("../project2ndStudy/projectTest_", landscapename,"/output/",landscapename, "_hotdry_disturbanceModulesEnabled.sqlite"))
dist2 <- tbl(db.conn, "landscape_removed") %>%
collect() %>%
mutate(climate = "hotdry")
dist.ls2 <- tbl(db.conn, "landscape") %>%
collect() %>%
mutate(climate = "hotdry")
dist.ds2 <- tbl(db.conn, "dynamicstand") %>%
collect() %>%
mutate(climate = "hotdry")
dbDisconnect(db.conn); rm(db.conn)
dist <- bind_rows(dist1, dist2); rm(dist1, dist2)
dist.ls <- bind_rows(dist.ls1, dist.ls2); rm(dist.ls1, dist.ls2)
dist.ds <- bind_rows(dist.ds1, dist.ds2); rm(dist.ds1, dist.ds2)
saveRDS(dist, "results/datasets/dist_bgd.sqlite")
saveRDS(dist.ls, "results/datasets/dist.ls_bgd.sqlite")
saveRDS(dist.ds, "results/datasets/dist.ds_bgd.sqlite")
saveRDS(dist, "results/datasets/dist_bgd.RDATA")
saveRDS(dist.ls, "results/datasets/dist.ls_bgd.RDATA")
saveRDS(dist.ds, "results/datasets/dist.ds_bgd.RDATA")
# trees killed
mean_line.rem <- rem %>%
group_by(year, climate, rep, size, freq, fecundity, browsing) %>%
summarise(n = sum(basal_area_m2)) %>%
group_by(size, freq, climate, rep, year) %>%
summarise(mean = mean(n)) %>% ungroup() %>%
mutate(dist=paste(size, freq), distRate = as.numeric(size) * as.numeric(freq))
rem %>%
mutate(groups = paste("size:", size, ", freq:", freq, ", fecundity:", fecundity, ", browsing:", browsing)) %>%
group_by(groups, year, climate, rep) %>%
summarise(n = sum(basal_area_m2)) %>%
ggplot(aes(x=year, y=n)) +
# geom_line(aes(group=groups), show.legend = F, alpha=0.6) +
geom_line(data=mean_line.rem, aes(y=mean, col=reorder(dist, distRate)), linewidth=2) +
geom_line(data =  dist %>% group_by(year, climate) %>% summarise(n = sum(basal_area_m2)) %>% mutate(groups = "Disturbance modules"),
col="black", linewidth=2) +
scale_y_log10() +
facet_grid(~climate) +
labs(x="Year", y="Trees killed by disturbance", col="",
title="How does process modfication impact tree mortality in BGNP?\nBlack line: simulation with disturbances simulated via modules instead of management\nY-axis log10-transformed") +
theme_bw()
png(paste0("results/figures/landscapeWide_treesKilled_", landscapename, ".png"), res=200,
height=2000, width=3000)
rem %>%
mutate(groups = paste("size:", size, ", freq:", freq, ", fecundity:", fecundity, ", browsing:", browsing)) %>%
group_by(groups, year, climate, rep) %>%
summarise(n = sum(basal_area_m2)) %>%
ggplot(aes(x=year, y=n)) +
# geom_line(aes(group=groups), show.legend = F, alpha=0.6) +
geom_line(data=mean_line.rem, aes(y=mean, col=reorder(dist, distRate)), linewidth=2) +
geom_line(data =  dist %>% group_by(year, climate) %>% summarise(n = sum(basal_area_m2)) %>% mutate(groups = "Disturbance modules"),
col="black", linewidth=2) +
scale_y_log10() +
facet_grid(~climate) +
labs(x="Year", y="Trees killed by disturbance", col="",
title="How does process modfication impact tree mortality in BGNP?\nBlack line: simulation with disturbances simulated via modules instead of management\nY-axis log10-transformed") +
theme_bw()
dev.off()
ls %>%
filter(identifier %in% c("baseline_rep1_size1_freq1_browsing1_fecundity100", "baseline_rep1_size10_freq10_browsing10_fecundity10")) %>%
mutate(species = ifelse(species %in% c("fasy", "piab", "abal", "lade", "acps"), species, "other")) %>%
ggplot(aes(x=year, y=basal_area_m2, fill=species)) +
geom_bar(stat="identity", position=position_fill()) +
facet_grid(identifier~climate) +
theme_bw()
ls %>%
filter(identifier %in% c("baseline_rep1_size1_freq1_browsing1_fecundity100", "baseline_rep1_size10_freq10_browsing10_fecundity10")) %>%
mutate(species = ifelse(species %in% c("fasy", "piab", "abal", "lade", "acps"), species, "other")) %>%
ggplot(aes(x=year, y=basal_area_m2, fill=species)) +
geom_bar(stat="identity", position=position_fill(), width=1.1) +
facet_grid(identifier~climate) +
theme_bw()
# species composition: size x 10, freq x 10
png(paste0("results/figures/landscapeWide_speciesComposition_relative_extremes_", landscapename, ".png"), res=200,
height=2000, width=3000)
ls %>%
filter(identifier %in% c("baseline_rep1_size1_freq1_browsing1_fecundity100", "baseline_rep1_size10_freq10_browsing10_fecundity10")) %>%
mutate(species = ifelse(species %in% c("fasy", "piab", "abal", "lade", "acps"), species, "other")) %>%
ggplot(aes(x=year, y=basal_area_m2, fill=species)) +
geom_bar(stat="identity", position=position_fill(), width=1.1) +
facet_grid(identifier~climate) +
theme_bw()
dev.off()
# all possible simulation runs (for now)
sims <- expand_grid(climate=c("baseline", "hotdry"), rep=c("1"),
sizeMods=c("1", "2", "5", "10"), freqMods=c("1", "2", "5", "10"),
browsingMods=c("1", "2", "5", "10"), fecundityMods= c("100", "50", "20", "10")); sims$dbname <-
paste0("output_", landscapename, "_", sims$climate, "_rep", sims$rep, "_size", sims$sizeMods,
"_freq", sims$freqMods, "_browsing", sims$browsingMods, "_fecundity", sims$fecundityMods, ".sqlite"); sims
View(sims)
# read in landscape and landscape_removed output
rem <- data.frame(); ls <- data.frame(); ds <- data.frame(); i<-1
for (i in 1:nrow(sims)) {
dbname <- paste0("../project2ndStudy/projectTest_", landscapename, "/output/", sims$dbname[i])
if (file.exists(dbname)) {
db.conn <- dbConnect(RSQLite::SQLite(),
dbname = dbname) # output_baseline_rep1_size1_freq1_browsing1_fecundity75
ls.i <- tbl(db.conn, "landscape") %>%
dplyr::select(year, species, count_ha, basal_area_m2, gwl_m3, volume_m3, height_avg_m) %>%
collect() %>%
mutate(climate = sims$climate[i], rep = sims$rep[i], size = sims$sizeMods[i], freq = sims$freqMods[i],
browsing = sims$browsingMods[i], fecundity = sims$fecundityMods[i],
identifier = paste0(sims$climate[i], "_rep", sims$rep[i], "_size", sims$sizeMods[i], "_freq", sims$freqMods[i],
"_browsing", sims$browsingMods[i], "_fecundity", sims$fecundityMods[i])) %>%
mutate(size = factor(size, levels = rev(c("10", "5", "2", "1"))),
freq = factor(freq, levels = rev(c("10", "5", "2", "1"))),
fecundity = factor(fecundity, levels = c("100", "50", "20", "10")),
browsing = factor(browsing, levels = rev(c("10", "5", "2", "1"))),
landscape = landscapename)
rem.i <- tbl(db.conn, "landscape_removed") %>%
dplyr::select(year, species, count, basal_area_m2, volume_m3, dbh_class, reason) %>%
collect() %>%
mutate(climate = sims$climate[i], rep = sims$rep[i], size = sims$sizeMods[i], freq = sims$freqMods[i],
browsing = sims$browsingMods[i], fecundity = sims$fecundityMods[i],
identifier = paste0(sims$climate[i], "_rep", sims$rep[i], "_size", sims$sizeMods[i], "_freq", sims$freqMods[i],
"_browsing", sims$browsingMods[i], "_fecundity", sims$fecundityMods[i])) %>%
mutate(size = factor(size, levels = rev(c("10", "5", "2", "1"))),
freq = factor(freq, levels = rev(c("10", "5", "2", "1"))),
fecundity = factor(fecundity, levels = c("100", "50", "20", "10")),
browsing = factor(browsing, levels = rev(c("10", "5", "2", "1"))),
landscape = landscapename)
ds.i <- tbl(db.conn, "dynamicstand") %>%
dplyr::select(-ru) %>%
collect() %>%
rename(basal_area_m2 = basalarea_sum, count_ha = if_height_0_1_0_sum) %>%
mutate(climate = sims$climate[i], rep = sims$rep[i], size = sims$sizeMods[i], freq = sims$freqMods[i],
browsing = sims$browsingMods[i], fecundity = sims$fecundityMods[i],
identifier = paste0(sims$climate[i], "_rep", sims$rep[i], "_size", sims$sizeMods[i], "_freq", sims$freqMods[i],
"_browsing", sims$browsingMods[i], "_fecundity", sims$fecundityMods[i])) %>%
mutate(size = factor(size, levels = rev(c("10", "5", "2", "1"))),
freq = factor(freq, levels = rev(c("10", "5", "2", "1"))),
fecundity = factor(fecundity, levels = c("100", "50", "20", "10")),
browsing = factor(browsing, levels = rev(c("10", "5", "2", "1"))),
landscape = landscapename)
dbDisconnect(db.conn)
rem <- bind_rows(rem, rem.i); ls <- bind_rows(ls, ls.i); ds <- bind_rows(ds, ds.i)
rm(db.conn, rem.i, ls.i, ds.i)
}
if (i%%10==0) print(i)
}
