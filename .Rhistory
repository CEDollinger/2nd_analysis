y = "Climate effect [%] ", title="Effect of climate on landscape unchanged compared to baseline") +
theme_bw()
dist.dyn.effect %>%
full_join(dist.dyn.effect %>%
filter(size==1, freq==1, fecundity==100, browsing==1) %>%
group_by(landscape) %>%
summarise(dist.dyn_ref = mean(dist.dyn_baseline)) %>%
dplyr::select(landscape, dist.dyn_ref), multiple = "all", by = "landscape") %>%
mutate(dist.change = (dist.dyn_baseline - dist.dyn_ref)/dist.dyn_ref,
landscape = factor(landscape, levels=c("stoko", "bgd", "grte"))) %>%
ggplot() +
geom_rect(data=effect.background,
aes(xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax, fill=interaction), alpha = 0.3) +
geom_point(aes(x=dist.change, y=effect*100, col=landscape),
size=0.05) +
geom_smooth(aes(x=dist.change, y=effect*100),
method = "loess", se = F, col="black") +
geom_hline(aes(yintercept=0)) +
facet_grid(landscape~name) +
scale_fill_manual(name = "Interaction type",
values = c("Dampening" = "#018571", "Amplifying"="#143d59"),
labels = c("Dampening:\nless landscape changed", "Amplifying:\nmore landscape changed")) +
labs(x = "Percent change in disturbance rate [%]\nRate based on only the first 10 simulation years",
y = "Climate effect [%] ", title="Effect of climate on landscape unchanged compared to baseline") +
theme_bw()
# relative disturbance rate
png("results/figures/Q2_climateEffect_disturbanceRate_relative_10yrs.png", res=200,
height=1300, width=2000)
dist.dyn.effect %>%
full_join(dist.dyn.effect %>%
filter(size==1, freq==1, fecundity==100, browsing==1) %>%
group_by(landscape) %>%
summarise(dist.dyn_ref = mean(dist.dyn_baseline)) %>%
dplyr::select(landscape, dist.dyn_ref), multiple = "all", by = "landscape") %>%
mutate(dist.change = (dist.dyn_baseline - dist.dyn_ref)/dist.dyn_ref,
landscape = factor(landscape, levels=c("stoko", "bgd", "grte"))) %>%
ggplot() +
geom_rect(data=effect.background,
aes(xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax, fill=interaction), alpha = 0.3) +
geom_point(aes(x=dist.change, y=effect*100, col=landscape),
size=0.05) +
geom_smooth(aes(x=dist.change, y=effect*100),
method = "loess", se = F, col="black") +
geom_hline(aes(yintercept=0)) +
facet_grid(landscape~name) +
scale_fill_manual(name = "Interaction type",
values = c("Dampening" = "#018571", "Amplifying"="#143d59"),
labels = c("Dampening:\nless landscape changed", "Amplifying:\nmore landscape changed")) +
labs(x = "Percent change in disturbance rate [%]\nRates based on only the first 10 simulation years",
y = "Climate effect [%] ", title="Effect of climate on landscape unchanged compared to baseline") +
theme_bw()
dev.off()
dist.dyn.effect %>%
full_join(dist.dyn.effect %>%
filter(size==1, freq==1, fecundity==100, browsing==1) %>%
group_by(landscape) %>%
summarise(dist.dyn_ref = mean(dist.dyn_baseline)) %>%
dplyr::select(landscape, dist.dyn_ref), multiple = "all", by = "landscape") %>%
mutate(dist.change = (dist.dyn_baseline - dist.dyn_ref)/dist.dyn_ref,
landscape = factor(landscape, levels=c("stoko", "bgd", "grte"))) %>%
ggplot() +
geom_rect(data=effect.background,
aes(xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax, fill=interaction), alpha = 0.3) +
geom_point(aes(x=dist.change, y=effect*100),
size=0.05) +
geom_smooth(aes(x=dist.change, y=effect*100),
method = "loess", se = F, col="black") +
geom_hline(aes(yintercept=0)) +
facet_grid(landscape~name) +
scale_fill_manual(name = "Interaction type",
values = c("Dampening" = "#018571", "Amplifying"="#143d59"),
labels = c("Dampening:\nless landscape changed", "Amplifying:\nmore landscape changed")) +
labs(x = "Percent change in disturbance rate [%]\nRates based on only the first 10 simulation years",
y = "Climate effect [%] ", title="Effect of climate on landscape unchanged compared to baseline") +
theme_bw()
# relative disturbance rate
png("results/figures/Q2_climateEffect_disturbanceRate_relative_10yrs.png", res=200,
height=1300, width=2000)
dist.dyn.effect %>%
full_join(dist.dyn.effect %>%
filter(size==1, freq==1, fecundity==100, browsing==1) %>%
group_by(landscape) %>%
summarise(dist.dyn_ref = mean(dist.dyn_baseline)) %>%
dplyr::select(landscape, dist.dyn_ref), multiple = "all", by = "landscape") %>%
mutate(dist.change = (dist.dyn_baseline - dist.dyn_ref)/dist.dyn_ref,
landscape = factor(landscape, levels=c("stoko", "bgd", "grte"))) %>%
ggplot() +
geom_rect(data=effect.background,
aes(xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax, fill=interaction), alpha = 0.3) +
geom_point(aes(x=dist.change, y=effect*100),
size=0.05) +
geom_smooth(aes(x=dist.change, y=effect*100),
method = "loess", se = F, col="black") +
geom_hline(aes(yintercept=0)) +
facet_grid(landscape~name) +
scale_fill_manual(name = "Interaction type",
values = c("Dampening" = "#018571", "Amplifying"="#143d59"),
labels = c("Dampening:\nless landscape changed", "Amplifying:\nmore landscape changed")) +
labs(x = "Percent change in disturbance rate [%]\nRates based on only the first 10 simulation years",
y = "Climate effect [%] ", title="Effect of climate on landscape unchanged compared to baseline") +
theme_bw()
dev.off()
# relative disturbance rate
png("results/figures/Q1_responseLine_disturbanceRate_relative_10yrs.png", res=200,
height=1300, width=2000)
dist.dyn.df %>%
full_join(dist.dyn.df %>%
filter(size==1, freq==1, fecundity==100, browsing==1) %>%
group_by(landscape) %>%
summarise(dist.dyn_ref = mean(dist.dyn)) %>%
dplyr::select(landscape, dist.dyn_ref), multiple = "all", by = "landscape") %>%
mutate(dist.change = (dist.dyn - dist.dyn_ref)/dist.dyn_ref,
landscape = factor(landscape, levels=c("stoko", "bgd", "grte"))) %>%
ggplot(aes(x = dist.change, y = value*100, col = name)) +
geom_point(size = 0.1, alpha = 0.5) +
geom_smooth(method = "loess", se = FALSE) +
facet_grid(~landscape) +
ylim(0, 100) +
labs(y = "Landscape unchanged [%]", col = "Response",
x = paste0("Percent change in disturbance rate [%]\nRates based on only the first ", unique(dist.dyn.df$n_year)," simulation years")) +
theme_bw() +
theme(legend.position = "top")
dev.off()
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Set up ###########################################################################################################################################
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
library(tidyverse)
library(ggpubr)
library(RSQLite); library(dbplyr)
install.packages("RSQLite")
install.packages("DBI")
library(DBI)
library(plogr)
library(RSQLite)
.libPaths()
install.packages("RSQLite", dependencies = FALSE)
install.packages("RSQLite", dependencies = FALSE)
.libPaths()[2]
install.packages("RSQLite", dependencies = FALSE, lib="/home/cdollinger/R/x86_64-pc-linux-gnu-library/4.3")
install.packages("RSQLite", dependencies = FALSE, lib = "/home/cdollinger/R/x86_64-pc-linux-gnu-library/4.3")
library(RSQLite)
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Set up ###########################################################################################################################################
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
library(tidyverse)
library(ggpubr)
library(RSQLite); library(dbplyr)
library(terra)
library(beepr)
"%ni%" <- Negate("%in%")
options(dplyr.summarise.inform = FALSE, readr.show_col_types = FALSE)
#setwd(dirname(rstudioapi::getActiveDocumentContext()$path)); getwd() # set wd to file location
landscapes <- c("bgd", "grte", "stoko")
vars <- c("size", "freq", "fecundity", "browsing")
keep.stoko <- read_csv("raw_data/helper_files/keep.csv") %>% pull(keep)
areas <- data.frame(area = c(8645, 42586, 35676), landscape=landscapes) # forested landscape area in ha, "bgd", "grte", "stoko"
response.colors <- c("#1b9e77", "#7570b3", "#d95f02"); names(response.colors) <- c('1. Structure\nBasal area decreased by >50 % from reference',  '2. Composition\nDominant species changed from reference', '3. Remaining forest\nStem density dropping below 50 trees/ha')
#
# set up ####
# Most common species ###
# (common.bgd <- dbConnect(RSQLite::SQLite(), "raw_data/breakingTheSystem_BGD_Results/data1/output.sqlite") %>%
#    tbl(., "landscape") %>% collect() %>%
#    group_by(species) %>% summarise(a=mean(basal_area_m2)) %>% arrange(desc(a)) %>% slice(1:8) %>% pull(species))
common.bgd <- c("piab", "lade", "fasy", "pice", "abal", "acps", "frex", "soau")
# (common.grte <- dbConnect(RSQLite::SQLite(), "raw_data/breakingTheSystem_GRTE_Results/data1/output.sqlite") %>%
#     tbl(., "landscape") %>% collect() %>%
#     group_by(species) %>% summarise(a=mean(basal_area_m2)) %>% arrange(desc(a)) %>% slice(1:8) %>% pull(species))
common.grte <- c("Pico", "Psme", "PicS", "Pien", "Potr", "Abla", "Pial")
# (common.stoko <- dbConnect(RSQLite::SQLite(), "raw_data/breakingTheSystem_STOKO_Results/data1/output.sqlite") %>%
#     tbl(., "landscape") %>% collect() %>%
#     group_by(species) %>% summarise(a=mean(basal_area_m2)) %>% arrange(desc(a)) %>% slice(1:8) %>%
#     pull(species))
common.stoko <- c("beer", "absa", "acmo", "kase", "qumo", "alhi", "tacu", "soco")
common.species <- list(common.bgd, common.grte, common.stoko); names(common.species) <- landscapes; rm(common.bgd, common.grte, common.stoko)
helpers <- list(list(), list(), list(), tibble(), tibble()); names(helpers) <- c("ru", "stand", "elev", "species", "env")
helper.files <- list(helpers, helpers, helpers); names(helper.files) <- landscapes; rm(helpers)
helper.files[["bgd"]][["ru"]] <- rast("../project2ndStudy/projectTest_bgd/gis/objectid.asc")
helper.files[["bgd"]][["stand"]] <- rast("../project2ndStudy/projectTest_bgd/gis/standgrid.asc")
helper.files[["bgd"]][["elev"]] <- rast("../project2ndStudy/projectTest_bgd/gis/dem100_rid.asc") %>%
resample(., helper.files[["bgd"]][["ru"]])
helper.files[["bgd"]][["species"]] <- dbConnect(RSQLite::SQLite(),  dbname = "../project2ndStudy/projectTest_bgd/database/species_bgd.sqlite") %>%
tbl(., "species") %>% collect() %>% dplyr::select(shortName, lightResponseClass, isConiferous, sapHDSapling, psiMin) %>%
rename(species = shortName) %>% mutate(lightResponseClass = as.numeric(lightResponseClass)) %>%
mutate(species.code = as.numeric(as.factor(species))) %>%
mutate(species.code = ifelse(species %in% common.species[["bgd"]], species.code, 0))
helper.files[["bgd"]][["env"]] <- read_delim("../project2ndStudy/projectTest_bgd/gis/environment.txt")
helper.files[["grte"]][["ru"]] <- rast("../project2ndStudy/projectTest_grte/gis/landscape_env_grid.txt")
helper.files[["grte"]][["stand"]] <- rast("../project2ndStudy/projectTest_grte/gis/landscape_stand_grid.txt")
helper.files[["grte"]][["elev"]] <- rast("../project2ndStudy/projectTest_grte/gis/landscape_DEM.txt") %>%
resample(., helper.files[["grte"]][["ru"]])
helper.files[["grte"]][["species"]] <- dbConnect(RSQLite::SQLite(),  dbname = "../project2ndStudy/projectTest_grte/database/species_grte.sqlite") %>%
tbl(., "species") %>% collect() %>% dplyr::select(shortName, lightResponseClass, isConiferous, sapHDSapling, psiMin) %>%
rename(species = shortName) %>% mutate(lightResponseClass = as.numeric(lightResponseClass)) %>%
mutate(species.code = as.numeric(as.factor(species))) %>%
filter(species %ni% c("Potr_backup", "Pial_backup_org", "Pico_backup")) %>%
mutate(species.code = ifelse(species %in% common.species$grte, species.code, 0))
helper.files[["grte"]][["env"]] <- read_delim("../project2ndStudy/projectTest_grte/gis/environment_file_cluster_kbdi_downscaledclimate.txt")
helper.files[["stoko"]][["ru"]] <- rast("../project2ndStudy/projectTest_stoko/gis/resourceUnit_snp_220908.asc")
helper.files[["stoko"]][["stand"]] <- rast("../project2ndStudy/projectTest_stoko/gis/standgrid_speed.asc")
helper.files[["stoko"]][["elev"]] <- rast("../project2ndStudy/projectTest_stoko/gis/jpn_elv_clipClim_JGD2000Zone13_res100m_cropped.asc") %>%
resample(., helper.files[["stoko"]][["ru"]])
helper.files[["stoko"]][["species"]] <- dbConnect(RSQLite::SQLite(),  dbname = "../project2ndStudy/projectTest_stoko/database/species_stoko.sqlite") %>%
tbl(., "speciesParameters") %>% collect() %>% dplyr::select(shortName, lightResponseClass, isConiferous, sapHDSapling, psiMin) %>%
rename(species = shortName) %>% mutate(lightResponseClass = as.numeric(lightResponseClass)) %>%
mutate(species.code = as.numeric(as.factor(species))) %>%
mutate(species.code = ifelse(species %in% common.species$stoko, species.code, 0))
helper.files[["stoko"]][["env"]] <- read_delim("../project2ndStudy/projectTest_stoko/gis/environment_final.txt")
rid.df <- data.frame()
for (landscape in 1:3) {
rid_i <-helper.files[[landscapes[landscape]]][["ru"]] %>%
terra::as.data.frame(., xy=T) %>% rename(rid=3) %>%
drop_na() %>% mutate(landscape = landscapes[landscape])
if (landscape == 3) rid_i <- rid_i %>% filter(rid %in% keep.stoko)
rid.df <- bind_rows(rid.df, rid_i);rm(rid_i)
}; rm(keep.stoko)
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# discarded
# reorg.ls<-readRDS("raw_data/helper_files/reorg.ls.RDATA")
# keep <- reorg.ls[["stoko"]] %>% summarise(unique=unique(rid)) %>% pull(unique)
# write_csv(as.data.frame(keep), "raw_data/helper_files/keep.csv")
# missing.ls <- list(c(), c(), c()); names(missing.ls) <- landscapes; ls.ls <- missing.ls; rem.ls <- missing.ls; patch.ls <- missing.ls
# ds.ls.i <- list(tibble(), tibble(), tibble()); names(ds.ls.i) <- c("basal", "dom", "forest")
# ds.ls <- list(ds.ls.i, ds.ls.i, ds.ls.i); names(ds.ls) <- landscapes; rm(ds.ls.i)
landscape_i <- 1; i<-1; id<-1
landscapename <- landscapes[landscape_i]
master <- read_delim(paste0("../project2ndStudy/dss/breakingTheSystem_", toupper(landscapename), "/cluster_master_", landscapename, ".csv"))
## Response line plots ####
overtime.ls <- readRDS("results/datasets/overtime.ls.RDATA")
View(overtime.ls)
# reference conditions for calculating differences in basal area / dominant species / regime shift, rep1-5
ref.ids <- c(0:4)*512+1 # run ids of the baseline runs
ds.ref <- data.frame()
for (id in ref.ids) {
db.conn <- dbConnect(RSQLite::SQLite(), paste0("raw_data/breakingTheSystem_", toupper(landscapename) ,"_Results/data",id,"/output.sqlite"))
ds.ref_i <- tbl(db.conn, "dynamicstand") %>%
dplyr::select(-ru) %>%
collect() %>%
rename(basal_area_m2 = basalarea_sum, count_ha = if_height_0_1_0_sum) %>%
mutate(climate = master$climate[id], rep = master$rep[id], size = master$sizeMod[id], freq = master$freqMod[id],
browsing = master$browsingMod[id], fecundity = master$fecundityMod[1],
identifier = paste0(master$climate[id], "_rep", master$rep[id], "_size", master$sizeMod[id], "_freq", master$freqMod[id],
"_browsing", master$browsingMod[id], "_fecundity", master$fecundityMod[id])) %>%
mutate(size = factor(size, levels = rev(c("10", "5", "2", "1"))),
freq = factor(freq, levels = rev(c("10", "5", "2", "1"))),
fecundity = factor(fecundity, levels = c("100", "50", "20", "10")),
browsing = factor(browsing, levels = rev(c("10", "5", "2", "1"))),
landscape = landscapename)
dbDisconnect(db.conn); rm(db.conn)
ds.ref <- bind_rows(ds.ref_i, ds.ref); rm(ds.ref_i)
}
rem <- data.frame(); ls <- data.frame(); ds.basal <- data.frame(); ds.dom <- data.frame(); ds.forest <- data.frame(); missing <- c(NA); patch <- data.frame()
dbname <- paste0("raw_data/breakingTheSystem_", toupper(landscapename) ,"_Results/data", master$run_id[i], "/output.sqlite")
patch_file <- paste0("raw_data/breakingTheSystem_", toupper(landscapename) ,"_Results/data", master$run_id[i], "/patches.csv")
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
## landscape output ####
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
ls.i <- tbl(db.conn, "landscape") %>%
dplyr::select(year, species, count_ha, basal_area_m2, gwl_m3, volume_m3, height_avg_m, cohort_count_ha) %>%
collect() %>%
mutate(climate = master$climate[i], rep = master$rep[i], size = master$sizeMod[i], freq = master$freqMod[i],
browsing = master$browsingMod[i], fecundity = master$fecundityMod[i],
identifier = paste0(master$climate[i], "_rep", master$rep[i], "_size", master$sizeMod[i], "_freq", master$freqMod[i],
"_browsing", master$browsingMod[i], "_fecundity", master$fecundityMod[i])) %>%
mutate(size = factor(size, levels = rev(c("10", "5", "2", "1"))),
freq = factor(freq, levels = rev(c("10", "5", "2", "1"))),
fecundity = factor(fecundity, levels = c("100", "50", "20", "10")),
browsing = factor(browsing, levels = rev(c("10", "5", "2", "1"))),
landscape = landscapename)
db.conn <- dbConnect(RSQLite::SQLite(), dbname = dbname) # output_baseline_rep1_size1_freq1_browsing1_fecundity75
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
## landscape output ####
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
ls.i <- tbl(db.conn, "landscape") %>%
dplyr::select(year, species, count_ha, basal_area_m2, gwl_m3, volume_m3, height_avg_m, cohort_count_ha) %>%
collect() %>%
mutate(climate = master$climate[i], rep = master$rep[i], size = master$sizeMod[i], freq = master$freqMod[i],
browsing = master$browsingMod[i], fecundity = master$fecundityMod[i],
identifier = paste0(master$climate[i], "_rep", master$rep[i], "_size", master$sizeMod[i], "_freq", master$freqMod[i],
"_browsing", master$browsingMod[i], "_fecundity", master$fecundityMod[i])) %>%
mutate(size = factor(size, levels = rev(c("10", "5", "2", "1"))),
freq = factor(freq, levels = rev(c("10", "5", "2", "1"))),
fecundity = factor(fecundity, levels = c("100", "50", "20", "10")),
browsing = factor(browsing, levels = rev(c("10", "5", "2", "1"))),
landscape = landscapename)
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# landscape_remove output ####
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
rem.i <- tbl(db.conn, "landscape_removed") %>%
dplyr::select(year, species, count, basal_area_m2, volume_m3, dbh_class, reason) %>%
collect() %>%
mutate(climate = master$climate[i], rep = master$rep[i], size = master$sizeMod[i], freq = master$freqMod[i],
browsing = master$browsingMod[i], fecundity = master$fecundityMod[i],
identifier = paste0(master$climate[i], "_rep", master$rep[i], "_size", master$sizeMod[i], "_freq", master$freqMod[i],
"_browsing", master$browsingMod[i], "_fecundity", master$fecundityMod[i])) %>%
mutate(size = factor(size, levels = rev(c("10", "5", "2", "1"))),
freq = factor(freq, levels = rev(c("10", "5", "2", "1"))),
fecundity = factor(fecundity, levels = c("100", "50", "20", "10")),
browsing = factor(browsing, levels = rev(c("10", "5", "2", "1"))),
landscape = landscapename)
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# dynamicstand output ####
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
ds.i <- tbl(db.conn, "dynamicstand") %>%
dplyr::select(-ru) %>%
collect() %>%
rename(basal_area_m2 = basalarea_sum, count_ha = if_height_0_1_0_sum) %>%
mutate(climate = master$climate[i], rep = master$rep[i], size = master$sizeMod[i], freq = master$freqMod[i],
browsing = master$browsingMod[i], fecundity = master$fecundityMod[i],
identifier = paste0(master$climate[i], "_rep", master$rep[i], "_size", master$sizeMod[i], "_freq", master$freqMod[i],
"_browsing", master$browsingMod[i], "_fecundity", master$fecundityMod[i])) %>%
mutate(size = factor(size, levels = rev(c("10", "5", "2", "1"))),
freq = factor(freq, levels = rev(c("10", "5", "2", "1"))),
fecundity = factor(fecundity, levels = c("100", "50", "20", "10")),
browsing = factor(browsing, levels = rev(c("10", "5", "2", "1"))),
landscape = landscapename)
# reference always baseline_rep1_size1_freq1_browsing1_fecundity100 (also for hot-dry runs)
# prop of basal area decreased by more than 50 %
ds.basal.i <- ds.i %>%
group_by(rid, climate, rep, size, freq, browsing, fecundity, identifier, landscape, year) %>%
summarise(basal_c = sum(basal_area_m2)) %>% ungroup() %>% # basal area sum per RU in 2020, 2050, 2100
inner_join(ds.ref %>%
group_by(rid, climate, size, freq, browsing, fecundity, landscape, year) %>%
summarise(basal_ref = sum(basal_area_m2)/5) %>% ungroup() %>% # basal area sum in 2020, 2050, 2100 under reference conditions
dplyr::select(rid, basal_ref, year), by = join_by(rid, year),
multiple = "all") %>%
filter(!is.na(basal_ref)) %>% # filter out RUs for which no reference conditions exist
group_by(climate, rep, size, freq, browsing, fecundity, identifier, landscape, year) %>%
mutate(basal_diff = (basal_c-basal_ref)/basal_ref, # relative change in basal area sum
threshold = ifelse(basal_diff < -0.5, "below", "above"), # count RUs where basal area dropped by more than 50% from reference; unidirectional: only if DECREASE > 50%
n_rid = length(unique(rid))) %>% ungroup()
# prop of dominant species changed
ds.dom.i <- ds.i %>%
group_by(rid, climate, rep, size, freq, browsing, fecundity, identifier, landscape, year) %>%
mutate(rel_count=count_ha/sum(count_ha), rel_basal=basal_area_m2/sum(basal_area_m2),
iv = rel_count+rel_basal) %>%
filter(iv == max(iv)) %>% ungroup() %>% # species with max IV in 2020, 2050, 2100
rename(dom_c = species) %>%
dplyr::select(rid, climate, rep, size, freq, browsing, fecundity, identifier, landscape, dom_c, year) %>%
inner_join(ds.ref %>%
group_by(rid, rep, climate, size, freq, browsing, fecundity, identifier, landscape, year) %>%
mutate(rel_count=count_ha/sum(count_ha), rel_basal=basal_area_m2/sum(basal_area_m2),
iv = rel_count+rel_basal) %>%
filter(iv == max(iv)) %>% # species with max IV in 2020, 2050, 2100 under reference conditions
ungroup() %>% rename(dom_ref = species) %>%
dplyr::select(rid, dom_ref, year) %>%
# chose most common dominant species by majority vote
group_by(rid, year, dom_ref) %>%
mutate(n_species = n()) %>% ungroup() %>%
group_by(rid, year) %>%
filter(n_species == max(n_species)) %>%
dplyr::select(-n_species) %>% distinct() %>%
# if rids have multiple equally popular dominant species: sample one randomly
mutate(n_rows=n(),
dom_ref = ifelse(n_rows > 1, sample(unique(dom_ref), 1), dom_ref)) %>% ungroup() %>%
dplyr::select(-n_rows) %>% distinct(), by = join_by(rid, year),
multiple = "all") %>% #summary()
filter(!is.na(dom_ref)) %>% # filter out RUs for which no reference conditions exist
group_by(climate, rep, size, freq, browsing, fecundity, identifier, landscape, year) %>%
mutate(threshold = ifelse(dom_c == dom_ref, "same", "different"), # count RUs where dominant species changed
n_rid = length(unique(rid))) %>% ungroup()
# prop of trees count > 50
ds.forest.i <- ds.i %>%
group_by(rid, climate, rep, size, freq, browsing, fecundity, identifier, landscape, year) %>%
summarise(count_sum_c = sum(count_ha)) %>% ungroup() %>% # tree count sum in 2020, 2050, 2100
inner_join(ds.ref %>%
group_by(rid, climate, size, freq, browsing, fecundity, landscape, year) %>%
summarise(count_sum_ref = sum(count_ha)/5) %>% ungroup() %>% # tree count sum in 2020, 2050, 2100 under reference conditions
dplyr::select(rid, count_sum_ref, year), by = join_by(rid, year),
multiple = "all") %>%
filter(!is.na(count_sum_ref)) %>% # filter out RUs for which no reference conditions exist
group_by(climate, rep, size, freq, browsing, fecundity, identifier, landscape, year) %>%
mutate(threshold = as.factor(ifelse(count_sum_c < 50 & count_sum_ref >= 50, "non-forest", "forest")), # count RUs where tree count dropped below 50 (and reference value is also higher than 50)
n_rid = length(unique(rid))) %>% ungroup()
dbDisconnect(db.conn)
# regeneration rate ####
rem.i
## regeneration rate ####
rem.i %>%
mutate(count_ha = count/areas[landscape_i, "area"])
areas[landscape_i, "area"]
## regeneration rate ####
ls.i %>%
group_by(landscape, year) %>%
summarise(count.sum = sum(count_ha)) %>% ungroup() %>%
group_by(landscape) %>%
mutate(count.previous = lag(count.sum),
zuwachs = count.sum - count.previous) %>% ungroup() %>%
full_join(rem.i %>%
mutate(count_ha = count/areas[landscape_i, "area"]) %>%
group_by(landscape, year) %>% # sum up over species + causes of death
summarise(died = sum(count_ha)) %>% ungroup(), by = c("year", "landscape")) %>%
mutate(born = zuwachs + died) %>%
group_by(landscape) %>%
summarise(recruited_mean = mean(born)) # mean number of trees that are recruited per year and hectare
1+1
ls.i %>%
group_by(landscape, year) %>%
summarise(count.sum = sum(count_ha)) %>% ungroup() %>%
group_by(landscape) %>%
mutate(count.previous = lag(count.sum),
zuwachs = count.sum - count.previous) %>% ungroup()
## regeneration rate ####
ls.i %>%
group_by(landscape, year) %>%
summarise(count.sum = sum(count_ha)) %>% ungroup() %>%
group_by(landscape) %>%
mutate(count.previous = lag(count.sum),
zuwachs = count.sum - count.previous) %>% ungroup() %>%
filter(year > 0) %>%
full_join(rem.i %>%
filter(year > 0) %>%
mutate(count_ha = count/areas[landscape_i, "area"]) %>%
group_by(landscape, year) %>% # sum up over species + causes of death
summarise(died = sum(count_ha)) %>% ungroup(), by = c("year", "landscape")) %>%
mutate(born = zuwachs + died) %>%
group_by(landscape) %>%
summarise(recruited_mean = mean(born)) # mean number of trees that are recruited per year and hectare
View(master)
i<-16
dbname <- paste0("raw_data/breakingTheSystem_", toupper(landscapename) ,"_Results/data", master$run_id[i], "/output.sqlite")
db.conn <- dbConnect(RSQLite::SQLite(), dbname = dbname) # output_baseline_rep1_size1_freq1_browsing1_fecundity75
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
## landscape output ####
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
ls.i <- tbl(db.conn, "landscape") %>%
dplyr::select(year, species, count_ha, basal_area_m2, gwl_m3, volume_m3, height_avg_m, cohort_count_ha) %>%
collect() %>%
mutate(climate = master$climate[i], rep = master$rep[i], size = master$sizeMod[i], freq = master$freqMod[i],
browsing = master$browsingMod[i], fecundity = master$fecundityMod[i],
identifier = paste0(master$climate[i], "_rep", master$rep[i], "_size", master$sizeMod[i], "_freq", master$freqMod[i],
"_browsing", master$browsingMod[i], "_fecundity", master$fecundityMod[i])) %>%
mutate(size = factor(size, levels = rev(c("10", "5", "2", "1"))),
freq = factor(freq, levels = rev(c("10", "5", "2", "1"))),
fecundity = factor(fecundity, levels = c("100", "50", "20", "10")),
browsing = factor(browsing, levels = rev(c("10", "5", "2", "1"))),
landscape = landscapename)
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# landscape_remove output ####
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
rem.i <- tbl(db.conn, "landscape_removed") %>%
dplyr::select(year, species, count, basal_area_m2, volume_m3, dbh_class, reason) %>%
collect() %>%
mutate(climate = master$climate[i], rep = master$rep[i], size = master$sizeMod[i], freq = master$freqMod[i],
browsing = master$browsingMod[i], fecundity = master$fecundityMod[i],
identifier = paste0(master$climate[i], "_rep", master$rep[i], "_size", master$sizeMod[i], "_freq", master$freqMod[i],
"_browsing", master$browsingMod[i], "_fecundity", master$fecundityMod[i])) %>%
mutate(size = factor(size, levels = rev(c("10", "5", "2", "1"))),
freq = factor(freq, levels = rev(c("10", "5", "2", "1"))),
fecundity = factor(fecundity, levels = c("100", "50", "20", "10")),
browsing = factor(browsing, levels = rev(c("10", "5", "2", "1"))),
landscape = landscapename)
# regeneration rate ####
ls.i %>%
group_by(landscape, year) %>%
summarise(count.sum = sum(count_ha)) %>% ungroup() %>%
group_by(landscape) %>%
mutate(count.previous = lag(count.sum),
zuwachs = count.sum - count.previous) %>% ungroup() %>%
filter(year > 0) %>%
full_join(rem.i %>%
filter(year > 0) %>%
mutate(count_ha = count/areas[landscape_i, "area"]) %>%
group_by(landscape, year) %>% # sum up over species + causes of death
summarise(died = sum(count_ha)) %>% ungroup(), by = c("year", "landscape")) %>%
mutate(born = zuwachs + died) %>%
group_by(landscape) %>%
summarise(recruited_mean = mean(born)) # mean number of trees that are recruited per year and hectare
# regeneration rate ####
ls.i %>%
group_by(landscape, year) %>%
summarise(count.sum = sum(count_ha)) %>% ungroup() %>%
mutate(count.previous = lag(count.sum),
zuwachs = count.sum - count.previous) %>% ungroup() %>%
filter(year > 0) %>%
full_join(rem.i %>%
filter(year > 0) %>%
mutate(count_ha = count/areas[landscape_i, "area"]) %>%
group_by(landscape, year) %>% # sum up over species + causes of death
summarise(died = sum(count_ha)) %>% ungroup(), by = c("year", "landscape")) %>%
mutate(born = zuwachs + died,
recruited_mean = mean(born)) # mean number of trees that are recruited per year and hectare
# regeneration rate ####
ls.i %>%
group_by(landscape, year, identifier, size, freq, climate, rep, browsing, fecundity) %>%
summarise(count.sum = sum(count_ha)) %>% ungroup() %>%
mutate(count.previous = lag(count.sum),
zuwachs = count.sum - count.previous) %>% ungroup() %>%
filter(year > 0) %>%
full_join(rem.i %>%
filter(year > 0) %>%
mutate(count_ha = count/areas[landscape_i, "area"]) %>%
group_by(landscape, year) %>% # sum up over species + causes of death
summarise(died = sum(count_ha)) %>% ungroup(), by = c("year", "landscape")) %>%
mutate(born = zuwachs + died,
recruited_mean = mean(born)) # mean number of trees that are recruited per year and hectare
# regeneration rate ####
regen.i <- ls.i %>%
group_by(landscape, year, identifier, size, freq, climate, rep, browsing, fecundity) %>%
summarise(count.sum = sum(count_ha)) %>% ungroup() %>%
mutate(count.previous = lag(count.sum),
zuwachs = count.sum - count.previous) %>% ungroup() %>%
filter(year > 0) %>%
full_join(rem.i %>%
filter(year > 0) %>%
mutate(count_ha = count/areas[landscape_i, "area"]) %>%
group_by(landscape, year) %>% # sum up over species + causes of death
summarise(died = sum(count_ha)) %>% ungroup(), by = c("year", "landscape")) %>%
mutate(born = zuwachs + died,
recruited_mean = mean(born)) # mean number of trees that are recruited per year and hectare
# combine all scenarios for the different outputs
rem <- bind_rows(rem, rem.i); ls <- bind_rows(ls, ls.i); patch <- bind_rows(patch, patch.i); regen <- bind_rows(regen, regen.i)
regen <- bind_rows(regen, regen.i)
