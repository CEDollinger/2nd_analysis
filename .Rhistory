dplyr::select(-dom_ref, -count_sum_c, -count_sum_ref, -basal_c, -basal_ref, -dom_ref, -basal_diff) %>%
group_by(rid, climate, size, freq, browsing, fecundity, landscape) %>% #everything but rep
mutate(species.count=length(unique(dom_c)),
dom_c = ifelse(species.count > 1, sample(dom_c, 1), dom_c)) %>%
filter(rid==3, climate=="baseline", size==1, freq==1, browsing==1, fecundity==100)
endpoint %>%
dplyr::select(-dom_ref, -count_sum_c, -count_sum_ref, -basal_c, -basal_ref, -dom_ref, -basal_diff) %>%
group_by(rid, climate, size, freq, browsing, fecundity, landscape, dom_c) %>% #everything but rep
mutate(species.count = n())
endpoint %>%
dplyr::select(-dom_ref, -count_sum_c, -count_sum_ref, -basal_c, -basal_ref, -dom_ref, -basal_diff) %>%
group_by(rid, climate, size, freq, browsing, fecundity, landscape, dom_c) %>% #everything but rep
mutate(species.count = n()) %>% ungroup() %>%
group_by(rid, climate, size, freq, browsing, fecundity, landscape) %>%
filter(species.count==max(species.count)) %>%
filter(rid==3, climate=="baseline", size==1, freq==1, browsing==1, fecundity==100)
endpoint %>%
dplyr::select(-dom_ref, -count_sum_c, -count_sum_ref, -basal_c, -basal_ref, -dom_ref, -basal_diff) %>%
group_by(rid, climate, size, freq, browsing, fecundity, landscape, dom_c) %>% #everything but rep
mutate(species.count = n()) %>% ungroup() %>%
group_by(rid, climate, size, freq, browsing, fecundity, landscape) %>%
filter(species.count==max(species.count)) %>%
filter(rid==3, climate=="baseline", size==1, freq==1, browsing==1, fecundity==100) %>%
dplyr::select(-rep) %>% distinct()
endpoint %>%
dplyr::select(-dom_ref, -count_sum_c, -count_sum_ref, -basal_c, -basal_ref, -dom_ref, -basal_diff) %>%
group_by(rid, climate, size, freq, browsing, fecundity, landscape, dom_c) %>% #everything but rep
mutate(species.count = n()) %>% ungroup() %>%
group_by(rid, climate, size, freq, browsing, fecundity, landscape) %>%
filter(species.count==max(species.count)) %>%
filter(rid==3, climate=="baseline", size==1, freq==1, browsing==1, fecundity==100) %>%
dplyr::select(-rep, -identifier) %>% distinct() %>%
mutate(n.row = n())
endpoint %>%
dplyr::select(-dom_ref, -count_sum_c, -count_sum_ref, -basal_c, -basal_ref, -dom_ref, -basal_diff) %>%
group_by(rid, climate, size, freq, browsing, fecundity, landscape, dom_c) %>% #everything but rep
mutate(species.count = n()) %>% ungroup() %>%
group_by(rid, climate, size, freq, browsing, fecundity, landscape) %>%
filter(species.count==max(species.count)) %>%
dplyr::select(-rep, -identifier) %>% distinct() %>%
mutate(n.row = n())
endpoint %>%
dplyr::select(-dom_ref, -count_sum_c, -count_sum_ref, -basal_c, -basal_ref, -dom_ref, -basal_diff) %>%
group_by(rid, climate, size, freq, browsing, fecundity, landscape, dom_c) %>% #everything but rep
mutate(species.count = n()) %>% ungroup() %>%
group_by(rid, climate, size, freq, browsing, fecundity, landscape) %>%
filter(species.count==max(species.count)) %>%
dplyr::select(-rep, -identifier) %>% distinct() %>%
mutate(n.row = n()) %>% summary()
endpoint %>%
dplyr::select(-dom_ref, -count_sum_c, -count_sum_ref, -basal_c, -basal_ref, -dom_ref, -basal_diff) %>%
group_by(rid, climate, size, freq, browsing, fecundity, landscape, dom_c) %>% #everything but rep
mutate(species.count = n()) %>% ungroup() %>%
group_by(rid, climate, size, freq, browsing, fecundity, landscape) %>%
filter(species.count==max(species.count)) %>%
dplyr::select(-rep, -identifier) %>% distinct() %>%
mutate(n.row = n()) %>%
filter(n.row > 1)
endpoint %>%
dplyr::select(-dom_ref, -count_sum_c, -count_sum_ref, -basal_c, -basal_ref, -dom_ref, -basal_diff) %>%
group_by(rid, climate, size, freq, browsing, fecundity, landscape, dom_c) %>% #everything but rep
mutate(species.count = n()) %>% ungroup() %>%
group_by(rid, climate, size, freq, browsing, fecundity, landscape) %>%
filter(species.count==max(species.count)) %>%
dplyr::select(-rep, -identifier) %>% distinct() %>%
mutate(n.row = n()) %>%
filter(rid==3789 , climate=="baseline", size==1, freq==1, browsing==1, fecundity==100)
endpoint %>%
dplyr::select(-dom_ref, -count_sum_c, -count_sum_ref, -basal_c, -basal_ref, -dom_ref, -basal_diff) %>%
group_by(rid, climate, size, freq, browsing, fecundity, landscape, dom_c) %>% #everything but rep
mutate(species.count = n()) %>% ungroup() %>%
group_by(rid, climate, size, freq, browsing, fecundity, landscape) %>%
filter(species.count==max(species.count)) %>%
dplyr::select(-rep, -identifier) %>% distinct() %>%
mutate(n.row = n(),
dom_c = ifelse(n.row > 1, sample(unique(dom_c), 1), dom_c)) %>%
filter(rid==3789 , climate=="baseline", size==1, freq==1, browsing==1, fecundity==100)
filter(rid==3789 , climate=="baseline", size==1, freq==1, browsing==1, fecundity==100)
endpoint %>%
dplyr::select(-dom_ref, -count_sum_c, -count_sum_ref, -basal_c, -basal_ref, -dom_ref, -basal_diff) %>%
group_by(rid, climate, size, freq, browsing, fecundity, landscape, dom_c) %>% #everything but rep
mutate(species.count = n()) %>% ungroup() %>%
group_by(rid, climate, size, freq, browsing, fecundity, landscape) %>%
filter(species.count==max(species.count)) %>%
dplyr::select(-rep, -identifier) %>% distinct() %>%
mutate(n.row = n(),
dom_c = ifelse(n.row > 1, sample(unique(dom_c), 1), dom_c)) %>%
dplyr::select(-species.count, -n.row) %>% ungroup() %>% distinct() %>%
filter(rid==3789 , climate=="baseline", size==1, freq==1, browsing==1, fecundity==100)
endpoint %>%
dplyr::select(-dom_ref, -count_sum_c, -count_sum_ref, -basal_c, -basal_ref, -dom_ref, -basal_diff) %>%
group_by(rid, climate, size, freq, browsing, fecundity, landscape, dom_c) %>% #everything but rep
mutate(species.count = n()) %>% ungroup() %>%
group_by(rid, climate, size, freq, browsing, fecundity, landscape) %>%
filter(species.count==max(species.count)) %>%
dplyr::select(-rep, -identifier) %>% distinct() %>%
mutate(n.row = n(),
dom_c = ifelse(n.row > 1, sample(unique(dom_c), 1), dom_c)) %>%
dplyr::select(-species.count, -n.row) %>% ungroup() %>% distinct() %>%
filter(rid==3789 , climate=="baseline", size==1, freq==1, browsing==1, fecundity==100)
endpoint %>%
dplyr::select(-dom_ref, -count_sum_c, -count_sum_ref, -basal_c, -basal_ref, -dom_ref, -basal_diff) %>%
group_by(rid, climate, size, freq, browsing, fecundity, landscape, dom_c) %>% #everything but rep
mutate(species.count = n()) %>% ungroup() %>%
group_by(rid, climate, size, freq, browsing, fecundity, landscape) %>%
filter(species.count==max(species.count)) %>%
dplyr::select(-rep, -identifier) %>% distinct() %>%
mutate(n.row = n(),
dom_c = ifelse(n.row > 1, sample(unique(dom_c), 1), dom_c)) %>%
dplyr::select(-species.count, -n.row) %>% ungroup() %>% distinct() %>%
filter(rid==3789 , climate=="baseline", size==1, freq==1, browsing==1, fecundity==100)
endpoint %>%
dplyr::select(-dom_ref, -count_sum_c, -count_sum_ref, -basal_c, -basal_ref, -dom_ref, -basal_diff) %>%
group_by(rid, climate, size, freq, browsing, fecundity, landscape, dom_c) %>% #everything but rep
mutate(species.count = n()) %>% ungroup() %>%
group_by(rid, climate, size, freq, browsing, fecundity, landscape) %>%
filter(species.count==max(species.count)) %>%
dplyr::select(-rep, -identifier) %>% distinct() %>%
mutate(n.row = n(),
dom_c = ifelse(n.row > 1, sample(unique(dom_c), 1), dom_c)) %>%
dplyr::select(-species.count, -n.row) %>% ungroup() %>% distinct() %>%
mutate(identifier = paste("size", size, "frequency", freq, "\nbrowsing", browsing, "fecundity", fecundity)) %>%
full_join(rid.df[rid.df$landscape==landscapename,]) %>%
filter(!is.na(size))
endpoint %>%
dplyr::select(-basal_c, -basal_ref, -dom_c, -dom_ref, -basal_diff) %>%
group_by(rid, climate, size, freq, browsing, fecundity, landscape) %>% #everything but rep
summarise(count_sum_c=mean(count_sum_c),
count_sum_ref=mean(count_sum_ref)) %>% ungroup() %>%
mutate(identifier = paste("size", size, "frequency", freq, "\nbrowsing", browsing, "fecundity", fecundity)) %>%
full_join(rid.df[rid.df$landscape==landscapename,]) %>%
filter(!is.na(size)) %>%
mutate(forest.loss = as.factor(ifelse(count_sum_c < 50 & count_sum_ref >= 50, "Non-Forest", "Forest"))) %>%
ggplot(aes(x=x, y=y, fill=forest.loss)) +
geom_tile() +
coord_equal() +
scale_fill_manual(values=c("Non-Forest" = "#c51b7d", "Forest" = "#7fbc41")) +
facet_grid(climate~identifier) +
labs(x="", y="", fill = "Forest Loss") +
theme_bw() +
theme(legend.position = "bottom")
# forest loss
png(paste0("results/figures/Q3_map_3_forestLoss_", landscapename ,".png"), res=200,
height=1600, width=2000)
endpoint %>%
dplyr::select(-basal_c, -basal_ref, -dom_c, -dom_ref, -basal_diff) %>%
group_by(rid, climate, size, freq, browsing, fecundity, landscape) %>% #everything but rep
summarise(count_sum_c=mean(count_sum_c),
count_sum_ref=mean(count_sum_ref)) %>% ungroup() %>%
mutate(identifier = paste("size", size, "frequency", freq, "\nbrowsing", browsing, "fecundity", fecundity)) %>%
full_join(rid.df[rid.df$landscape==landscapename,]) %>%
filter(!is.na(size)) %>%
mutate(forest.loss = as.factor(ifelse(count_sum_c < 50 & count_sum_ref >= 50, "Non-Forest", "Forest"))) %>%
ggplot(aes(x=x, y=y, fill=forest.loss)) +
geom_tile() +
coord_equal() +
scale_fill_manual(values=c("Non-Forest" = "#c51b7d", "Forest" = "#7fbc41")) +
facet_grid(climate~identifier) +
labs(x="", y="", fill = "Forest Loss") +
theme_bw() +
theme(legend.position = "bottom")
dev.off()
common.species[["bgd"]]
endpoint %>%
dplyr::select(-dom_ref, -count_sum_c, -count_sum_ref, -basal_c, -basal_ref, -dom_ref, -basal_diff) %>%
group_by(rid, climate, size, freq, browsing, fecundity, landscape, dom_c) %>% #everything but rep
mutate(species.count = n()) %>% ungroup() %>%
group_by(rid, climate, size, freq, browsing, fecundity, landscape) %>%
filter(species.count==max(species.count)) %>%
dplyr::select(-rep, -identifier) %>% distinct() %>%
mutate(n.row = n(),
dom_c = ifelse(n.row > 1, sample(unique(dom_c), 1), dom_c)) %>%
dplyr::select(-species.count, -n.row) %>% ungroup() %>% distinct() %>%
mutate(identifier = paste("size", size, "frequency", freq, "\nbrowsing", browsing, "fecundity", fecundity)) %>%
full_join(rid.df[rid.df$landscape==landscapename,]) %>%
filter(!is.na(size)) %>%
mutate(dom_c = ifelse(dom_c %in% common.species[[landscapename]], dom_c, "Other"))
endpoint %>%
dplyr::select(-dom_ref, -count_sum_c, -count_sum_ref, -basal_c, -basal_ref, -dom_ref, -basal_diff) %>%
group_by(rid, climate, size, freq, browsing, fecundity, landscape, dom_c) %>% #everything but rep
mutate(species.count = n()) %>% ungroup() %>%
group_by(rid, climate, size, freq, browsing, fecundity, landscape) %>%
filter(species.count==max(species.count)) %>%
dplyr::select(-rep, -identifier) %>% distinct() %>%
mutate(n.row = n(),
dom_c = ifelse(n.row > 1, sample(unique(dom_c), 1), dom_c)) %>%
dplyr::select(-species.count, -n.row) %>% ungroup() %>% distinct() %>%
mutate(identifier = paste("size", size, "frequency", freq, "\nbrowsing", browsing, "fecundity", fecundity)) %>%
full_join(rid.df[rid.df$landscape==landscapename,]) %>%
filter(!is.na(size)) %>%
mutate(dom_c = ifelse(dom_c %in% common.species[[landscapename]], dom_c, "Other")) %>%
ggplot(aes(x=x, y=y, fill=dom_c)) +
geom_tile() +
coord_equal() +
#scale_fill_manual(values=c("Non-Forest" = "#c51b7d", "Forest" = "#7fbc41")) +
facet_grid(climate~identifier) +
labs(x="", y="", fill = "Dominant species") +
theme_bw() +
theme(legend.position = "bottom")
View(helper.files)
helper.files[["bgd"]][["species"]]
helpers <- list(list(), list(), list(), tibble(), tibble()); names(helpers) <- c("ru", "stand", "elev", "species", "env")
helper.files <- list(helpers, helpers, helpers); names(helper.files) <- landscapes; rm(helpers)
helper.files[["bgd"]][["ru"]] <- rast("../project2ndStudy/projectTest_bgd/gis/objectid.asc")
helper.files[["bgd"]][["stand"]] <- rast("../project2ndStudy/projectTest_bgd/gis/standgrid.asc")
helper.files[["bgd"]][["elev"]] <- rast("../project2ndStudy/projectTest_bgd/gis/dem100_rid.asc") %>%
resample(., helper.files[["bgd"]][["ru"]])
helper.files[["bgd"]][["species"]] <- dbConnect(RSQLite::SQLite(),  dbname = "../project2ndStudy/projectTest_bgd/database/species_bgd.sqlite") %>%
tbl(., "species") %>% collect() %>% dplyr::select(shortName, lightResponseClass, isConiferous, sapHDSapling, psiMin, displayColor) %>%
rename(species = shortName) %>% mutate(lightResponseClass = as.numeric(lightResponseClass)) %>%
mutate(species.code = as.numeric(as.factor(species))) %>%
mutate(species.code = ifelse(species %in% common.species[["bgd"]], species.code, 0))
helper.files[["bgd"]][["env"]] <- read_delim("../project2ndStudy/projectTest_bgd/gis/environment.txt")
helper.files[["grte"]][["ru"]] <- rast("../project2ndStudy/projectTest_grte/gis/landscape_env_grid.txt")
helper.files[["grte"]][["stand"]] <- rast("../project2ndStudy/projectTest_grte/gis/landscape_stand_grid.txt")
helper.files[["grte"]][["elev"]] <- rast("../project2ndStudy/projectTest_grte/gis/landscape_DEM.txt") %>%
resample(., helper.files[["grte"]][["ru"]])
helper.files[["grte"]][["species"]] <- dbConnect(RSQLite::SQLite(),  dbname = "../project2ndStudy/projectTest_grte/database/species_grte.sqlite") %>%
tbl(., "species") %>% collect() %>% dplyr::select(shortName, lightResponseClass, isConiferous, sapHDSapling, psiMin, displayColor) %>%
rename(species = shortName) %>% mutate(lightResponseClass = as.numeric(lightResponseClass)) %>%
mutate(species.code = as.numeric(as.factor(species))) %>%
filter(species %ni% c("Potr_backup", "Pial_backup_org", "Pico_backup")) %>%
mutate(species.code = ifelse(species %in% common.species$grte, species.code, 0))
helper.files[["grte"]][["env"]] <- read_delim("../project2ndStudy/projectTest_grte/gis/environment_file_cluster_kbdi_downscaledclimate.txt")
helper.files[["stoko"]][["ru"]] <- rast("../project2ndStudy/projectTest_stoko/gis/resourceUnit_snp_220908.asc")
helper.files[["stoko"]][["stand"]] <- rast("../project2ndStudy/projectTest_stoko/gis/standgrid_speed.asc")
helper.files[["stoko"]][["elev"]] <- rast("../project2ndStudy/projectTest_stoko/gis/jpn_elv_clipClim_JGD2000Zone13_res100m_cropped.asc") %>%
resample(., helper.files[["stoko"]][["ru"]])
helper.files[["stoko"]][["species"]] <- dbConnect(RSQLite::SQLite(),  dbname = "../project2ndStudy/projectTest_stoko/database/species_stoko.sqlite") %>%
tbl(., "speciesParameters") %>% collect() %>% dplyr::select(shortName, lightResponseClass, isConiferous, sapHDSapling, psiMin, displayColor) %>%
rename(species = shortName) %>% mutate(lightResponseClass = as.numeric(lightResponseClass)) %>%
mutate(species.code = as.numeric(as.factor(species))) %>%
mutate(species.code = ifelse(species %in% common.species$stoko, species.code, 0))
helper.files[["stoko"]][["env"]] <- read_delim("../project2ndStudy/projectTest_stoko/gis/environment_final.txt")
View(helper.files)
common.species[[landscapename]]
spec <- common.species[[landscapename]]
names(spec)
helper.files[["bgd"]][["species"]]
helper.files[["bgd"]][["species"]] %>% filter(species %in% common.species[["bgd"]])
spec.col <- helper.files[["bgd"]][["species"]] %>% filter(species %in% common.species[["bgd"]]) %>% arrange(species) %>% pull(displayColor)
helper.files[["bgd"]][["species"]] %>% filter(species %in% common.species[["bgd"]]) %>% arrange(species)
order(common.species["bgd"])
sort(common.species["bgd"])
common.species["bgd"]
sort(common.species[["bgd"]])
names(spec.col)<- sort(common.species[["bgd"]])
spec.col
endpoint %>%
dplyr::select(-dom_ref, -count_sum_c, -count_sum_ref, -basal_c, -basal_ref, -dom_ref, -basal_diff) %>%
group_by(rid, climate, size, freq, browsing, fecundity, landscape, dom_c) %>% #everything but rep
mutate(species.count = n()) %>% ungroup() %>%
group_by(rid, climate, size, freq, browsing, fecundity, landscape) %>%
filter(species.count==max(species.count)) %>%
dplyr::select(-rep, -identifier) %>% distinct() %>%
mutate(n.row = n(),
dom_c = ifelse(n.row > 1, sample(unique(dom_c), 1), dom_c)) %>%
dplyr::select(-species.count, -n.row) %>% ungroup() %>% distinct() %>%
mutate(identifier = paste("size", size, "frequency", freq, "\nbrowsing", browsing, "fecundity", fecundity)) %>%
full_join(rid.df[rid.df$landscape==landscapename,]) %>%
filter(!is.na(size)) %>%
mutate(dom_c = ifelse(dom_c %in% common.species[[landscapename]], dom_c, "Other")) %>%
ggplot(aes(x=x, y=y, fill=dom_c)) +
geom_tile() +
coord_equal() +
scale_fill_manual(values=spec.col) +
facet_grid(climate~identifier) +
labs(x="", y="", fill = "Dominant species") +
theme_bw() +
theme(legend.position = "bottom")
spec.col <- helper.files[[landscapename]][["species"]] %>% filter(species %in% common.species[[landscapename]]) %>% arrange(species) %>% mutate(displayColor = paste0("#", displayColor)) %>% pull(displayColor)
names(spec.col)<- sort(common.species[[landscapename]])
endpoint %>%
dplyr::select(-dom_ref, -count_sum_c, -count_sum_ref, -basal_c, -basal_ref, -dom_ref, -basal_diff) %>%
group_by(rid, climate, size, freq, browsing, fecundity, landscape, dom_c) %>% #everything but rep
mutate(species.count = n()) %>% ungroup() %>%
group_by(rid, climate, size, freq, browsing, fecundity, landscape) %>%
filter(species.count==max(species.count)) %>%
dplyr::select(-rep, -identifier) %>% distinct() %>%
mutate(n.row = n(),
dom_c = ifelse(n.row > 1, sample(unique(dom_c), 1), dom_c)) %>%
dplyr::select(-species.count, -n.row) %>% ungroup() %>% distinct() %>%
mutate(identifier = paste("size", size, "frequency", freq, "\nbrowsing", browsing, "fecundity", fecundity)) %>%
full_join(rid.df[rid.df$landscape==landscapename,]) %>%
filter(!is.na(size)) %>%
mutate(dom_c = ifelse(dom_c %in% common.species[[landscapename]], dom_c, "Other")) %>%
ggplot(aes(x=x, y=y, fill=dom_c)) +
geom_tile() +
coord_equal() +
scale_fill_manual(values=spec.col) +
facet_grid(climate~identifier) +
labs(x="", y="", fill = "Dominant species") +
theme_bw() +
theme(legend.position = "bottom")
png(paste0("results/figures/Q3_map_2_dominantSpecies_", landscapename ,".png"), res=200,
height=1600, width=2000)
endpoint %>%
dplyr::select(-dom_ref, -count_sum_c, -count_sum_ref, -basal_c, -basal_ref, -dom_ref, -basal_diff) %>%
group_by(rid, climate, size, freq, browsing, fecundity, landscape, dom_c) %>% #everything but rep
mutate(species.count = n()) %>% ungroup() %>%
group_by(rid, climate, size, freq, browsing, fecundity, landscape) %>%
filter(species.count==max(species.count)) %>%
dplyr::select(-rep, -identifier) %>% distinct() %>%
mutate(n.row = n(),
dom_c = ifelse(n.row > 1, sample(unique(dom_c), 1), dom_c)) %>%
dplyr::select(-species.count, -n.row) %>% ungroup() %>% distinct() %>%
mutate(identifier = paste("size", size, "frequency", freq, "\nbrowsing", browsing, "fecundity", fecundity)) %>%
full_join(rid.df[rid.df$landscape==landscapename,]) %>%
filter(!is.na(size)) %>%
mutate(dom_c = ifelse(dom_c %in% common.species[[landscapename]], dom_c, "Other")) %>%
ggplot(aes(x=x, y=y, fill=dom_c)) +
geom_tile() +
coord_equal() +
scale_fill_manual(values=spec.col) +
facet_grid(climate~identifier) +
labs(x="", y="", fill = "Dominant species") +
theme_bw() +
theme(legend.position = "bottom")
dev.off()
endpoint <- readRDS(paste0("results/datasets/map_endpoints_",landscapename,".RDATA"))
# basal area
png(paste0("results/figures/Q3_map_1_basalArea_", landscapename ,".png"), res=200,
height=1600, width=2000)
print(
endpoint %>%
dplyr::select(-basal_ref, -count_sum_c, -count_sum_ref, -dom_c, -dom_ref, -basal_diff) %>%
group_by(rid, climate, size, freq, browsing, fecundity, landscape) %>% #everything but rep
summarise(basal_c=mean(basal_c)) %>% ungroup() %>%
mutate(identifier = paste("size", size, "frequency", freq, "\nbrowsing", browsing, "fecundity", fecundity)) %>%
full_join(rid.df[rid.df$landscape==landscapename,]) %>%
filter(!is.na(size)) %>%
mutate(basal_c = ifelse(basal_c > quantile(basal_c, 0.9), quantile(basal_c, 0.9), basal_c)) %>%
ggplot(aes(x=x, y=y, fill=basal_c)) +
geom_tile() +
coord_equal() +
scale_fill_distiller(palette="YlGnBu", direction=1) +
facet_grid(climate~identifier) +
labs(x="", y="", fill = "Mean basal area [m^2 ha^-1]") +
theme_bw() +
theme(legend.position = "bottom"))
dev.off()
# dominant species
spec.col <- helper.files[[landscapename]][["species"]] %>% filter(species %in% common.species[[landscapename]]) %>% arrange(species) %>% mutate(displayColor = paste0("#", displayColor)) %>% pull(displayColor)
names(spec.col)<- sort(common.species[[landscapename]])
png(paste0("results/figures/Q3_map_2_dominantSpecies_", landscapename ,".png"), res=200,
height=1600, width=2000)
print(
endpoint %>%
dplyr::select(-dom_ref, -count_sum_c, -count_sum_ref, -basal_c, -basal_ref, -dom_ref, -basal_diff) %>%
group_by(rid, climate, size, freq, browsing, fecundity, landscape, dom_c) %>% #everything but rep
mutate(species.count = n()) %>% ungroup() %>%
group_by(rid, climate, size, freq, browsing, fecundity, landscape) %>%
filter(species.count==max(species.count)) %>%
dplyr::select(-rep, -identifier) %>% distinct() %>%
mutate(n.row = n(),
dom_c = ifelse(n.row > 1, sample(unique(dom_c), 1), dom_c)) %>%
dplyr::select(-species.count, -n.row) %>% ungroup() %>% distinct() %>%
mutate(identifier = paste("size", size, "frequency", freq, "\nbrowsing", browsing, "fecundity", fecundity)) %>%
full_join(rid.df[rid.df$landscape==landscapename,]) %>%
filter(!is.na(size)) %>%
mutate(dom_c = ifelse(dom_c %in% common.species[[landscapename]], dom_c, "Other")) %>%
ggplot(aes(x=x, y=y, fill=dom_c)) +
geom_tile() +
coord_equal() +
scale_fill_manual(values=spec.col) +
facet_grid(climate~identifier) +
labs(x="", y="", fill = "Dominant species") +
theme_bw() +
theme(legend.position = "bottom"))
dev.off()
# forest loss
png(paste0("results/figures/Q3_map_3_forestLoss_", landscapename ,".png"), res=200,
height=1600, width=2000)
print(
endpoint %>%
dplyr::select(-basal_c, -basal_ref, -dom_c, -dom_ref, -basal_diff) %>%
group_by(rid, climate, size, freq, browsing, fecundity, landscape) %>% #everything but rep
summarise(count_sum_c=mean(count_sum_c),
count_sum_ref=mean(count_sum_ref)) %>% ungroup() %>%
mutate(identifier = paste("size", size, "frequency", freq, "\nbrowsing", browsing, "fecundity", fecundity)) %>%
full_join(rid.df[rid.df$landscape==landscapename,]) %>%
filter(!is.na(size)) %>%
mutate(forest.loss = as.factor(ifelse(count_sum_c < 50 & count_sum_ref >= 50, "Non-Forest", "Forest"))) %>%
ggplot(aes(x=x, y=y, fill=forest.loss)) +
geom_tile() +
coord_equal() +
scale_fill_manual(values=c("Non-Forest" = "#c51b7d", "Forest" = "#7fbc41")) +
facet_grid(climate~identifier) +
labs(x="", y="", fill = "Forest Loss") +
theme_bw() +
theme(legend.position = "bottom"))
dev.off()
rm(endpoint, spec.col)
for (landscape_i in 1:3) {
landscapename <- landscapes[landscape_i]
## Indicator maps ####
# map.df <- readRDS(paste0("results/datasets/map.df_", landscapename, ".RDATA"))
#
# # structure
# singleIndicators <- map.df %>%
#   filter(identifier %ni% paste0("baseline_rep",c(1:5),"_size1_freq1_browsing1_fecundity100")) %>%
#   # sample_frac(0.01) %>%
#   group_by(climate) %>%
#   mutate(chances = length(unique(paste(rep,size,freq,browsing,fecundity)))) %>% ungroup() %>% # chances = number of runs
#   pivot_longer(cols=c(10, 14,15)) %>%
#   group_by(rid, climate, name, x, y, value) %>%
#   summarise(unchanged = mean(sum(n())/chances)*100) %>% ungroup() %>%
#   filter(value=="no") %>%
#   full_join(rid.df[rid.df$landscape==landscapename,] %>%
#               expand_grid(climate = c("baseline", "hotdry"), value=c("no"),
#                           name = c("1. Structure\nBasal area decreased by >50 % from reference",
#                                    "2. Composition\nDominant species changed from reference",
#                                    "3. Remaining forest\nStem density dropping below 50 trees/ha")),
#             by = c("rid", "x", "y", "climate", "value", "name")) %>%
#   mutate(unchanged = ifelse(is.na(unchanged), 0, unchanged))
# singleIndicators %>% summary()
#
# png(paste0("results/figures/Q3_map_singleIndicators_", landscapename ,".png"), res=200,
#     height=2000, width=2000)
# print(
#   singleIndicators %>%
#     filter(!is.na(x)) %>%
#     ggplot(aes(x=x, y=y, fill=unchanged)) +
#     geom_tile() +
#     facet_grid(climate~name) +
#     coord_equal() +
#     scale_fill_distiller(palette = "PuRd", direction = -1) +
#     labs(fill="% unchanged",
#          title="Map showing which cells where more susceptible to change\nCell value is the % of scenarios where cells remained unchanged") +
#     theme_bw()
# )
# dev.off()
#
# rm(singleIndicators, map.df); gc()
# print("finished indicator maps")
# Endpoint maps ####
endpoint <- readRDS(paste0("results/datasets/map_endpoints_",landscapename,".RDATA"))
# basal area
png(paste0("results/figures/Q3_map_1_basalArea_", landscapename ,".png"), res=200,
height=1600, width=2000)
print(
endpoint %>%
dplyr::select(-basal_ref, -count_sum_c, -count_sum_ref, -dom_c, -dom_ref, -basal_diff) %>%
group_by(rid, climate, size, freq, browsing, fecundity, landscape) %>% #everything but rep
summarise(basal_c=mean(basal_c)) %>% ungroup() %>%
mutate(identifier = paste("size", size, "frequency", freq, "\nbrowsing", browsing, "fecundity", fecundity)) %>%
full_join(rid.df[rid.df$landscape==landscapename,]) %>%
filter(!is.na(size)) %>%
mutate(basal_c = ifelse(basal_c > quantile(basal_c, 0.9), quantile(basal_c, 0.9), basal_c)) %>%
ggplot(aes(x=x, y=y, fill=basal_c)) +
geom_tile() +
coord_equal() +
scale_fill_distiller(palette="YlGnBu", direction=1) +
facet_grid(climate~identifier) +
labs(x="", y="", fill = "Mean basal area [m^2 ha^-1]") +
theme_bw() +
theme(legend.position = "bottom"))
dev.off()
# dominant species
spec.col <- helper.files[[landscapename]][["species"]] %>% filter(species %in% common.species[[landscapename]]) %>% arrange(species) %>% mutate(displayColor = paste0("#", displayColor)) %>% pull(displayColor)
names(spec.col)<- sort(common.species[[landscapename]])
png(paste0("results/figures/Q3_map_2_dominantSpecies_", landscapename ,".png"), res=200,
height=1600, width=2000)
print(
endpoint %>%
dplyr::select(-dom_ref, -count_sum_c, -count_sum_ref, -basal_c, -basal_ref, -dom_ref, -basal_diff) %>%
group_by(rid, climate, size, freq, browsing, fecundity, landscape, dom_c) %>% #everything but rep
mutate(species.count = n()) %>% ungroup() %>%
group_by(rid, climate, size, freq, browsing, fecundity, landscape) %>%
filter(species.count==max(species.count)) %>%
dplyr::select(-rep, -identifier) %>% distinct() %>%
mutate(n.row = n(),
dom_c = ifelse(n.row > 1, sample(unique(dom_c), 1), dom_c)) %>%
dplyr::select(-species.count, -n.row) %>% ungroup() %>% distinct() %>%
mutate(identifier = paste("size", size, "frequency", freq, "\nbrowsing", browsing, "fecundity", fecundity)) %>%
full_join(rid.df[rid.df$landscape==landscapename,]) %>%
filter(!is.na(size)) %>%
mutate(dom_c = ifelse(dom_c %in% common.species[[landscapename]], dom_c, "Other")) %>%
ggplot(aes(x=x, y=y, fill=dom_c)) +
geom_tile() +
coord_equal() +
scale_fill_manual(values=spec.col) +
facet_grid(climate~identifier) +
labs(x="", y="", fill = "Dominant species") +
theme_bw() +
theme(legend.position = "bottom"))
dev.off()
# forest loss
png(paste0("results/figures/Q3_map_3_forestLoss_", landscapename ,".png"), res=200,
height=1600, width=2000)
print(
endpoint %>%
dplyr::select(-basal_c, -basal_ref, -dom_c, -dom_ref, -basal_diff) %>%
group_by(rid, climate, size, freq, browsing, fecundity, landscape) %>% #everything but rep
summarise(count_sum_c=mean(count_sum_c),
count_sum_ref=mean(count_sum_ref)) %>% ungroup() %>%
mutate(identifier = paste("size", size, "frequency", freq, "\nbrowsing", browsing, "fecundity", fecundity)) %>%
full_join(rid.df[rid.df$landscape==landscapename,]) %>%
filter(!is.na(size)) %>%
mutate(forest.loss = as.factor(ifelse(count_sum_c < 50 & count_sum_ref >= 50, "Non-Forest", "Forest"))) %>%
ggplot(aes(x=x, y=y, fill=forest.loss)) +
geom_tile() +
coord_equal() +
scale_fill_manual(values=c("Non-Forest" = "#c51b7d", "Forest" = "#7fbc41")) +
facet_grid(climate~identifier) +
labs(x="", y="", fill = "Forest Loss") +
theme_bw() +
theme(legend.position = "bottom"))
dev.off()
rm(endpoint, spec.col)
print("finished endpoint maps")
}
